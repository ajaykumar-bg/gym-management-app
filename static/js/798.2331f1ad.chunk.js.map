{"version":3,"file":"static/js/798.2331f1ad.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/FilterList.js","../node_modules/@mui/icons-material/esm/LocalFireDepartment.js","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js","features/DietFoodManagement/context/DietFoodContext.jsx","../node_modules/@mui/icons-material/esm/Grass.js","features/DietFoodManagement/constants/index.js","features/DietFoodManagement/components/DietFoodDashboard.jsx","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Grain.js","../node_modules/@mui/icons-material/esm/Opacity.js","features/DietFoodManagement/components/FoodCard.jsx","features/DietFoodManagement/components/FoodDatabaseFilters.jsx","features/DietFoodManagement/components/DietFoodList.jsx","features/DietFoodManagement/components/DietFoodApp.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/TrendingUp.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4zM3 6v2h18V6zm3 7h12v-2H6z\"\n}), 'FilterList');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 12.9-2.13 2.09c-.56.56-.87 1.29-.87 2.07C9 18.68 10.35 20 12 20s3-1.32 3-2.94c0-.78-.31-1.52-.87-2.07z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6-.44.55C14.38 8.02 12 7.19 12 5.3V2S4 6 4 13c0 2.92 1.56 5.47 3.89 6.86-.56-.79-.89-1.76-.89-2.8 0-1.32.52-2.56 1.47-3.5L12 10.1l3.53 3.47c.95.93 1.47 2.17 1.47 3.5 0 1.02-.31 1.96-.85 2.75 1.89-1.15 3.29-3.06 3.71-5.3.66-3.55-1.07-6.9-3.86-8.52\"\n}, \"1\")], 'LocalFireDepartment');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          \"aria-hidden\": true,\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","/**\r\n * Diet Food Management Context\r\n * Global state management for food database and operations\r\n */\r\n\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n} from 'react';\r\nimport foodDatabase from '../constants/foodDatabase.json';\r\n\r\nconst DietFoodContext = createContext();\r\n\r\nexport const DietFoodProvider = ({ children }) => {\r\n  const [foods, setFoods] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Modal states\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n\r\n  // Filter and search states\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [selectedSubcategory, setSelectedSubcategory] = useState('all');\r\n  const [selectedDietaryTags, setSelectedDietaryTags] = useState([]);\r\n  const [sortBy, setSortBy] = useState('name-asc');\r\n\r\n  // Initialize foods data\r\n  useEffect(() => {\r\n    const initializeFoods = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Simulate API call delay\r\n        await new Promise((resolve) => setTimeout(resolve, 500));\r\n        setFoods(foodDatabase);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to load food database');\r\n        console.error('Error loading foods:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeFoods();\r\n  }, []);\r\n\r\n  // Filtered and sorted foods\r\n  const filteredFoods = useMemo(() => {\r\n    let filtered = foods.filter((food) => {\r\n      // Search term filter\r\n      const matchesSearch =\r\n        food.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        food.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        food.category.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n      // Category filter\r\n      const matchesCategory =\r\n        selectedCategory === 'all' || food.category === selectedCategory;\r\n\r\n      // Subcategory filter\r\n      const matchesSubcategory =\r\n        selectedSubcategory === 'all' ||\r\n        food.subcategory === selectedSubcategory;\r\n\r\n      // Dietary tags filter\r\n      const matchesDietaryTags =\r\n        selectedDietaryTags.length === 0 ||\r\n        selectedDietaryTags.some((tag) => food.dietaryTags.includes(tag));\r\n\r\n      return (\r\n        matchesSearch &&\r\n        matchesCategory &&\r\n        matchesSubcategory &&\r\n        matchesDietaryTags\r\n      );\r\n    });\r\n\r\n    // Apply sorting\r\n    filtered.sort((a, b) => {\r\n      switch (sortBy) {\r\n        case 'name-asc':\r\n          return a.name.localeCompare(b.name);\r\n        case 'name-desc':\r\n          return b.name.localeCompare(a.name);\r\n        case 'calories-asc':\r\n          return a.nutritionPer100g.calories - b.nutritionPer100g.calories;\r\n        case 'calories-desc':\r\n          return b.nutritionPer100g.calories - a.nutritionPer100g.calories;\r\n        case 'protein-asc':\r\n          return a.nutritionPer100g.protein - b.nutritionPer100g.protein;\r\n        case 'protein-desc':\r\n          return b.nutritionPer100g.protein - a.nutritionPer100g.protein;\r\n        case 'created-asc':\r\n          return new Date(a.createdAt) - new Date(b.createdAt);\r\n        case 'created-desc':\r\n          return new Date(b.createdAt) - new Date(a.createdAt);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n    return filtered;\r\n  }, [\r\n    foods,\r\n    searchTerm,\r\n    selectedCategory,\r\n    selectedSubcategory,\r\n    selectedDietaryTags,\r\n    sortBy,\r\n  ]);\r\n\r\n  // Get unique subcategories for selected category\r\n  const availableSubcategories = useMemo(() => {\r\n    if (selectedCategory === 'all') {\r\n      return [...new Set(foods.map((food) => food.subcategory))];\r\n    }\r\n    return [\r\n      ...new Set(\r\n        foods\r\n          .filter((food) => food.category === selectedCategory)\r\n          .map((food) => food.subcategory)\r\n      ),\r\n    ];\r\n  }, [foods, selectedCategory]);\r\n\r\n  // CRUD Operations\r\n  const createFood = async (foodData) => {\r\n    try {\r\n      const newFood = {\r\n        ...foodData,\r\n        id: `food${Date.now()}`,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n        isActive: true,\r\n      };\r\n\r\n      setFoods((prev) => [...prev, newFood]);\r\n      setIsCreateModalOpen(false);\r\n      return { success: true, food: newFood };\r\n    } catch (error) {\r\n      console.error('Error creating food:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const updateFood = async (foodId, foodData) => {\r\n    try {\r\n      const updatedFood = {\r\n        ...foodData,\r\n        id: foodId,\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n\r\n      setFoods((prev) =>\r\n        prev.map((food) => (food.id === foodId ? updatedFood : food))\r\n      );\r\n      setIsEditModalOpen(false);\r\n      setSelectedFood(null);\r\n      return { success: true, food: updatedFood };\r\n    } catch (error) {\r\n      console.error('Error updating food:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const deleteFood = async (foodId) => {\r\n    try {\r\n      setFoods((prev) => prev.filter((food) => food.id !== foodId));\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Error deleting food:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const toggleFoodStatus = async (foodId) => {\r\n    try {\r\n      setFoods((prev) =>\r\n        prev.map((food) =>\r\n          food.id === foodId\r\n            ? {\r\n                ...food,\r\n                isActive: !food.isActive,\r\n                updatedAt: new Date().toISOString(),\r\n              }\r\n            : food\r\n        )\r\n      );\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Error toggling food status:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  // Modal operations\r\n  const openCreateModal = () => {\r\n    setSelectedFood(null);\r\n    setIsCreateModalOpen(true);\r\n  };\r\n\r\n  const closeCreateModal = () => {\r\n    setIsCreateModalOpen(false);\r\n    setSelectedFood(null);\r\n  };\r\n\r\n  const openEditModal = (food) => {\r\n    setSelectedFood(food);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const closeEditModal = () => {\r\n    setIsEditModalOpen(false);\r\n    setSelectedFood(null);\r\n  };\r\n\r\n  // Utility functions\r\n  const getFoodById = (foodId) => {\r\n    return foods.find((food) => food.id === foodId);\r\n  };\r\n\r\n  const getFoodsByCategory = (category) => {\r\n    return foods.filter((food) => food.category === category);\r\n  };\r\n\r\n  const searchFoodsByName = (name) => {\r\n    return foods.filter((food) =>\r\n      food.name.toLowerCase().includes(name.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const calculateNutritionForQuantity = (food, quantity) => {\r\n    const multiplier = quantity / 100; // Assuming quantity in grams\r\n    return {\r\n      calories: Math.round(food.nutritionPer100g.calories * multiplier),\r\n      protein: Math.round(food.nutritionPer100g.protein * multiplier * 10) / 10,\r\n      carbs: Math.round(food.nutritionPer100g.carbs * multiplier * 10) / 10,\r\n      fats: Math.round(food.nutritionPer100g.fats * multiplier * 10) / 10,\r\n      fiber: Math.round(food.nutritionPer100g.fiber * multiplier * 10) / 10,\r\n      sugar: Math.round(food.nutritionPer100g.sugar * multiplier * 10) / 10,\r\n      sodium: Math.round(food.nutritionPer100g.sodium * multiplier),\r\n    };\r\n  };\r\n\r\n  // Filter operations\r\n  const clearFilters = () => {\r\n    setSearchTerm('');\r\n    setSelectedCategory('all');\r\n    setSelectedSubcategory('all');\r\n    setSelectedDietaryTags([]);\r\n    setSortBy('name-asc');\r\n  };\r\n\r\n  const contextValue = {\r\n    // Data\r\n    foods: filteredFoods,\r\n    allFoods: foods,\r\n    loading,\r\n    error,\r\n    availableSubcategories,\r\n\r\n    // Modal states\r\n    isCreateModalOpen,\r\n    isEditModalOpen,\r\n    selectedFood,\r\n\r\n    // Filter states\r\n    searchTerm,\r\n    selectedCategory,\r\n    selectedSubcategory,\r\n    selectedDietaryTags,\r\n    sortBy,\r\n\r\n    // CRUD operations\r\n    createFood,\r\n    updateFood,\r\n    deleteFood,\r\n    toggleFoodStatus,\r\n\r\n    // Modal operations\r\n    openCreateModal,\r\n    closeCreateModal,\r\n    openEditModal,\r\n    closeEditModal,\r\n\r\n    // Filter operations\r\n    setSearchTerm,\r\n    setSelectedCategory,\r\n    setSelectedSubcategory,\r\n    setSelectedDietaryTags,\r\n    setSortBy,\r\n    clearFilters,\r\n\r\n    // Utility functions\r\n    getFoodById,\r\n    getFoodsByCategory,\r\n    searchFoodsByName,\r\n    calculateNutritionForQuantity,\r\n  };\r\n\r\n  return (\r\n    <DietFoodContext.Provider value={contextValue}>\r\n      {children}\r\n    </DietFoodContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDietFood = () => {\r\n  const context = useContext(DietFoodContext);\r\n  if (!context) {\r\n    throw new Error('useDietFood must be used within a DietFoodProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default DietFoodContext;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 20H2v-2h5.75c-.73-2.81-2.94-5.01-5.75-5.74.64-.16 1.31-.26 2-.26 4.42 0 8 3.58 8 8m10-7.74c-.64-.16-1.31-.26-2-.26-2.93 0-5.48 1.58-6.88 3.93.29.66.53 1.35.67 2.07.13.65.2 1.32.2 2h8v-2h-5.75c.74-2.81 2.95-5.01 5.76-5.74m-6.36-1.24c.78-2.09 2.23-3.84 4.09-5C15.44 6.16 12 9.67 12 14v.02c.95-1.27 2.2-2.3 3.64-3m-4.22-2.17C10.58 6.66 8.88 4.89 6.7 4 8.14 5.86 9 8.18 9 10.71c0 .21-.03.41-.04.61.43.24.83.52 1.22.82.21-1.18.65-2.29 1.24-3.29\"\n}), 'Grass');","/**\r\n * Diet Food Management Constants\r\n * Categories, labels, colors, and other constants for food management\r\n */\r\n\r\n// Food Categories\r\nexport const FOOD_CATEGORIES = {\r\n  PROTEIN: 'protein',\r\n  CARBS: 'carbs',\r\n  FATS: 'fats',\r\n  VEGETABLES: 'vegetables',\r\n  FRUITS: 'fruits',\r\n  DAIRY: 'dairy',\r\n  GRAINS: 'grains',\r\n  NUTS_SEEDS: 'nuts-seeds',\r\n  BEVERAGES: 'beverages',\r\n  SUPPLEMENTS: 'supplements',\r\n};\r\n\r\nexport const FOOD_CATEGORY_LABELS = {\r\n  [FOOD_CATEGORIES.PROTEIN]: 'Proteins',\r\n  [FOOD_CATEGORIES.CARBS]: 'Carbohydrates',\r\n  [FOOD_CATEGORIES.FATS]: 'Healthy Fats',\r\n  [FOOD_CATEGORIES.VEGETABLES]: 'Vegetables',\r\n  [FOOD_CATEGORIES.FRUITS]: 'Fruits',\r\n  [FOOD_CATEGORIES.DAIRY]: 'Dairy',\r\n  [FOOD_CATEGORIES.GRAINS]: 'Grains',\r\n  [FOOD_CATEGORIES.NUTS_SEEDS]: 'Nuts & Seeds',\r\n  [FOOD_CATEGORIES.BEVERAGES]: 'Beverages',\r\n  [FOOD_CATEGORIES.SUPPLEMENTS]: 'Supplements',\r\n};\r\n\r\nexport const FOOD_CATEGORY_COLORS = {\r\n  [FOOD_CATEGORIES.PROTEIN]: 'error',\r\n  [FOOD_CATEGORIES.CARBS]: 'warning',\r\n  [FOOD_CATEGORIES.FATS]: 'info',\r\n  [FOOD_CATEGORIES.VEGETABLES]: 'success',\r\n  [FOOD_CATEGORIES.FRUITS]: 'secondary',\r\n  [FOOD_CATEGORIES.DAIRY]: 'primary',\r\n  [FOOD_CATEGORIES.GRAINS]: 'warning',\r\n  [FOOD_CATEGORIES.NUTS_SEEDS]: 'info',\r\n  [FOOD_CATEGORIES.BEVERAGES]: 'info',\r\n  [FOOD_CATEGORIES.SUPPLEMENTS]: 'secondary',\r\n};\r\n\r\n// Food Subcategories\r\nexport const FOOD_SUBCATEGORIES = {\r\n  // Protein subcategories\r\n  POULTRY: 'poultry',\r\n  FISH: 'fish',\r\n  MEAT: 'meat',\r\n  ORGAN_MEAT: 'organ-meat',\r\n  DAIRY: 'dairy',\r\n  PLANT_PROTEIN: 'plant-protein',\r\n  LEGUMES: 'legumes',\r\n  SUPPLEMENTS: 'supplements',\r\n\r\n  // Carb subcategories\r\n  GRAINS: 'grains',\r\n  VEGETABLES: 'vegetables',\r\n  FRUITS: 'fruits',\r\n  SWEETENERS: 'sweeteners',\r\n  CRACKERS: 'crackers',\r\n  CEREALS: 'cereals',\r\n\r\n  // Fat subcategories\r\n  OILS: 'oils',\r\n  NUTS: 'nuts',\r\n  SEEDS: 'seeds',\r\n  AVOCADO: 'avocado',\r\n  CHOCOLATE: 'chocolate',\r\n  DAIRY_FATS: 'dairy-fats',\r\n\r\n  // Dairy subcategories\r\n  CHEESE: 'cheese',\r\n  MILK: 'milk',\r\n  PLANT_MILK: 'plant-milk',\r\n  YOGURT: 'yogurt',\r\n\r\n  // Vegetable subcategories\r\n  LEAFY_GREENS: 'leafy-greens',\r\n  CRUCIFEROUS: 'cruciferous',\r\n  ROOT_VEGETABLES: 'root-vegetables',\r\n  NIGHTSHADES: 'nightshades',\r\n  GREEN_VEGETABLES: 'green-vegetables',\r\n  SQUASH: 'squash',\r\n  FUNGI: 'fungi',\r\n  MIXED: 'mixed',\r\n\r\n  // Fruit subcategories\r\n  BERRIES: 'berries',\r\n  CITRUS: 'citrus',\r\n  TROPICAL: 'tropical',\r\n  STONE_FRUITS: 'stone-fruits',\r\n  FRESH: 'fresh',\r\n\r\n  // Grains subcategories\r\n  OATS: 'oats',\r\n  PSEUDOCEREAL: 'pseudocereal',\r\n  RICE: 'rice',\r\n  RICE_PRODUCTS: 'rice-products',\r\n  BREAD: 'bread',\r\n\r\n  // Nuts & Seeds subcategories\r\n  TREE_NUTS: 'tree-nuts',\r\n  NUT_BUTTER: 'nut-butter',\r\n};\r\n\r\nexport const FOOD_SUBCATEGORY_LABELS = {\r\n  [FOOD_SUBCATEGORIES.POULTRY]: 'Poultry',\r\n  [FOOD_SUBCATEGORIES.FISH]: 'Fish & Seafood',\r\n  [FOOD_SUBCATEGORIES.MEAT]: 'Meat',\r\n  [FOOD_SUBCATEGORIES.ORGAN_MEAT]: 'Organ Meats',\r\n  [FOOD_SUBCATEGORIES.DAIRY]: 'Dairy Products',\r\n  [FOOD_SUBCATEGORIES.PLANT_PROTEIN]: 'Plant Proteins',\r\n  [FOOD_SUBCATEGORIES.GRAINS]: 'Grains & Cereals',\r\n  [FOOD_SUBCATEGORIES.VEGETABLES]: 'Vegetables',\r\n  [FOOD_SUBCATEGORIES.FRUITS]: 'Fruits',\r\n  [FOOD_SUBCATEGORIES.LEGUMES]: 'Legumes',\r\n  [FOOD_SUBCATEGORIES.OILS]: 'Oils',\r\n  [FOOD_SUBCATEGORIES.NUTS]: 'Nuts',\r\n  [FOOD_SUBCATEGORIES.SEEDS]: 'Seeds',\r\n  [FOOD_SUBCATEGORIES.AVOCADO]: 'Avocado',\r\n  [FOOD_SUBCATEGORIES.LEAFY_GREENS]: 'Leafy Greens',\r\n  [FOOD_SUBCATEGORIES.CRUCIFEROUS]: 'Cruciferous',\r\n  [FOOD_SUBCATEGORIES.ROOT_VEGETABLES]: 'Root Vegetables',\r\n  [FOOD_SUBCATEGORIES.NIGHTSHADES]: 'Nightshades',\r\n  [FOOD_SUBCATEGORIES.GREEN_VEGETABLES]: 'Green Vegetables',\r\n  [FOOD_SUBCATEGORIES.SQUASH]: 'Squash',\r\n  [FOOD_SUBCATEGORIES.FUNGI]: 'Mushrooms',\r\n  [FOOD_SUBCATEGORIES.MIXED]: 'Mixed Vegetables',\r\n  [FOOD_SUBCATEGORIES.BERRIES]: 'Berries',\r\n  [FOOD_SUBCATEGORIES.CITRUS]: 'Citrus',\r\n  [FOOD_SUBCATEGORIES.TROPICAL]: 'Tropical',\r\n  [FOOD_SUBCATEGORIES.STONE_FRUITS]: 'Stone Fruits',\r\n  [FOOD_SUBCATEGORIES.FRESH]: 'Fresh Fruits',\r\n  [FOOD_SUBCATEGORIES.OATS]: 'Oats',\r\n  [FOOD_SUBCATEGORIES.PSEUDOCEREAL]: 'Pseudocereals',\r\n  [FOOD_SUBCATEGORIES.TREE_NUTS]: 'Tree Nuts',\r\n  [FOOD_SUBCATEGORIES.NUT_BUTTER]: 'Nut Butters',\r\n  [FOOD_SUBCATEGORIES.YOGURT]: 'Yogurt',\r\n  [FOOD_SUBCATEGORIES.CHEESE]: 'Cheese',\r\n  [FOOD_SUBCATEGORIES.MILK]: 'Milk',\r\n  [FOOD_SUBCATEGORIES.PLANT_MILK]: 'Plant Milk',\r\n  [FOOD_SUBCATEGORIES.SWEETENERS]: 'Sweeteners',\r\n  [FOOD_SUBCATEGORIES.CHOCOLATE]: 'Chocolate',\r\n  [FOOD_SUBCATEGORIES.DAIRY_FATS]: 'Dairy Fats',\r\n  [FOOD_SUBCATEGORIES.CRACKERS]: 'Crackers',\r\n  [FOOD_SUBCATEGORIES.CEREALS]: 'Cereals',\r\n  [FOOD_SUBCATEGORIES.SEEDS]: 'Seeds',\r\n  [FOOD_SUBCATEGORIES.SUPPLEMENTS]: 'Supplements',\r\n};\r\n\r\n// Dietary Tags\r\nexport const DIETARY_TAGS = {\r\n  HIGH_PROTEIN: 'high-protein',\r\n  LOW_CARB: 'low-carb',\r\n  KETO_FRIENDLY: 'keto-friendly',\r\n  PALEO: 'paleo',\r\n  VEGAN: 'vegan',\r\n  VEGETARIAN: 'vegetarian',\r\n  GLUTEN_FREE: 'gluten-free',\r\n  DAIRY_FREE: 'dairy-free',\r\n  LOW_CALORIE: 'low-calorie',\r\n  HIGH_FIBER: 'high-fiber',\r\n  ANTIOXIDANT_RICH: 'antioxidant-rich',\r\n  OMEGA_3: 'omega-3',\r\n  HEART_HEALTHY: 'heart-healthy',\r\n  PROBIOTIC: 'probiotic',\r\n  WHOLE_GRAIN: 'whole-grain',\r\n  ORGANIC: 'organic',\r\n};\r\n\r\nexport const DIETARY_TAG_LABELS = {\r\n  [DIETARY_TAGS.HIGH_PROTEIN]: 'High Protein',\r\n  [DIETARY_TAGS.LOW_CARB]: 'Low Carb',\r\n  [DIETARY_TAGS.KETO_FRIENDLY]: 'Keto Friendly',\r\n  [DIETARY_TAGS.PALEO]: 'Paleo',\r\n  [DIETARY_TAGS.VEGAN]: 'Vegan',\r\n  [DIETARY_TAGS.VEGETARIAN]: 'Vegetarian',\r\n  [DIETARY_TAGS.GLUTEN_FREE]: 'Gluten Free',\r\n  [DIETARY_TAGS.DAIRY_FREE]: 'Dairy Free',\r\n  [DIETARY_TAGS.LOW_CALORIE]: 'Low Calorie',\r\n  [DIETARY_TAGS.HIGH_FIBER]: 'High Fiber',\r\n  [DIETARY_TAGS.ANTIOXIDANT_RICH]: 'Antioxidant Rich',\r\n  [DIETARY_TAGS.OMEGA_3]: 'Omega-3',\r\n  [DIETARY_TAGS.HEART_HEALTHY]: 'Heart Healthy',\r\n  [DIETARY_TAGS.PROBIOTIC]: 'Probiotic',\r\n  [DIETARY_TAGS.WHOLE_GRAIN]: 'Whole Grain',\r\n  [DIETARY_TAGS.ORGANIC]: 'Organic',\r\n};\r\n\r\nexport const DIETARY_TAG_COLORS = {\r\n  [DIETARY_TAGS.HIGH_PROTEIN]: 'error',\r\n  [DIETARY_TAGS.LOW_CARB]: 'success',\r\n  [DIETARY_TAGS.KETO_FRIENDLY]: 'info',\r\n  [DIETARY_TAGS.PALEO]: 'warning',\r\n  [DIETARY_TAGS.VEGAN]: 'success',\r\n  [DIETARY_TAGS.VEGETARIAN]: 'success',\r\n  [DIETARY_TAGS.GLUTEN_FREE]: 'primary',\r\n  [DIETARY_TAGS.DAIRY_FREE]: 'primary',\r\n  [DIETARY_TAGS.LOW_CALORIE]: 'success',\r\n  [DIETARY_TAGS.HIGH_FIBER]: 'secondary',\r\n  [DIETARY_TAGS.ANTIOXIDANT_RICH]: 'secondary',\r\n  [DIETARY_TAGS.OMEGA_3]: 'info',\r\n  [DIETARY_TAGS.HEART_HEALTHY]: 'error',\r\n  [DIETARY_TAGS.PROBIOTIC]: 'primary',\r\n  [DIETARY_TAGS.WHOLE_GRAIN]: 'warning',\r\n  [DIETARY_TAGS.ORGANIC]: 'success',\r\n};\r\n\r\n// Common Allergens\r\nexport const ALLERGENS = {\r\n  DAIRY: 'dairy',\r\n  EGGS: 'eggs',\r\n  FISH: 'fish',\r\n  SHELLFISH: 'shellfish',\r\n  TREE_NUTS: 'tree-nuts',\r\n  PEANUTS: 'peanuts',\r\n  WHEAT: 'wheat',\r\n  SOY: 'soy',\r\n  SESAME: 'sesame',\r\n  GLUTEN: 'gluten',\r\n};\r\n\r\nexport const ALLERGEN_LABELS = {\r\n  [ALLERGENS.DAIRY]: 'Dairy',\r\n  [ALLERGENS.EGGS]: 'Eggs',\r\n  [ALLERGENS.FISH]: 'Fish',\r\n  [ALLERGENS.SHELLFISH]: 'Shellfish',\r\n  [ALLERGENS.TREE_NUTS]: 'Tree Nuts',\r\n  [ALLERGENS.PEANUTS]: 'Peanuts',\r\n  [ALLERGENS.WHEAT]: 'Wheat',\r\n  [ALLERGENS.SOY]: 'Soy',\r\n  [ALLERGENS.SESAME]: 'Sesame',\r\n  [ALLERGENS.GLUTEN]: 'Gluten',\r\n};\r\n\r\n// Preparation Methods\r\nexport const PREPARATION_METHODS = {\r\n  RAW: 'raw',\r\n  BOILED: 'boiled',\r\n  STEAMED: 'steamed',\r\n  GRILLED: 'grilled',\r\n  BAKED: 'baked',\r\n  ROASTED: 'roasted',\r\n  FRIED: 'fried',\r\n  SAUTEED: 'sauteed',\r\n  POACHED: 'poached',\r\n  SCRAMBLED: 'scrambled',\r\n};\r\n\r\nexport const PREPARATION_METHOD_LABELS = {\r\n  [PREPARATION_METHODS.RAW]: 'Raw',\r\n  [PREPARATION_METHODS.BOILED]: 'Boiled',\r\n  [PREPARATION_METHODS.STEAMED]: 'Steamed',\r\n  [PREPARATION_METHODS.GRILLED]: 'Grilled',\r\n  [PREPARATION_METHODS.BAKED]: 'Baked',\r\n  [PREPARATION_METHODS.ROASTED]: 'Roasted',\r\n  [PREPARATION_METHODS.FRIED]: 'Fried',\r\n  [PREPARATION_METHODS.SAUTEED]: 'Sautéed',\r\n  [PREPARATION_METHODS.POACHED]: 'Poached',\r\n  [PREPARATION_METHODS.SCRAMBLED]: 'Scrambled',\r\n};\r\n\r\n// Sort Options\r\nexport const SORT_OPTIONS = {\r\n  NAME_ASC: 'name-asc',\r\n  NAME_DESC: 'name-desc',\r\n  CALORIES_ASC: 'calories-asc',\r\n  CALORIES_DESC: 'calories-desc',\r\n  PROTEIN_ASC: 'protein-asc',\r\n  PROTEIN_DESC: 'protein-desc',\r\n  CREATED_ASC: 'created-asc',\r\n  CREATED_DESC: 'created-desc',\r\n};\r\n\r\nexport const SORT_OPTION_LABELS = {\r\n  [SORT_OPTIONS.NAME_ASC]: 'Name A-Z',\r\n  [SORT_OPTIONS.NAME_DESC]: 'Name Z-A',\r\n  [SORT_OPTIONS.CALORIES_ASC]: 'Calories Low-High',\r\n  [SORT_OPTIONS.CALORIES_DESC]: 'Calories High-Low',\r\n  [SORT_OPTIONS.PROTEIN_ASC]: 'Protein Low-High',\r\n  [SORT_OPTIONS.PROTEIN_DESC]: 'Protein High-Low',\r\n  [SORT_OPTIONS.CREATED_ASC]: 'Oldest First',\r\n  [SORT_OPTIONS.CREATED_DESC]: 'Newest First',\r\n};\r\n\r\n// Macro thresholds for categorization\r\nexport const MACRO_THRESHOLDS = {\r\n  HIGH_PROTEIN: 15, // grams per 100g\r\n  LOW_CARB: 10, // grams per 100g\r\n  HIGH_FIBER: 5, // grams per 100g\r\n  LOW_CALORIE: 50, // calories per 100g\r\n};\r\n\r\nconst constants = {\r\n  FOOD_CATEGORIES,\r\n  FOOD_CATEGORY_LABELS,\r\n  FOOD_CATEGORY_COLORS,\r\n  FOOD_SUBCATEGORIES,\r\n  FOOD_SUBCATEGORY_LABELS,\r\n  DIETARY_TAGS,\r\n  DIETARY_TAG_LABELS,\r\n  DIETARY_TAG_COLORS,\r\n  ALLERGENS,\r\n  ALLERGEN_LABELS,\r\n  PREPARATION_METHODS,\r\n  PREPARATION_METHOD_LABELS,\r\n  SORT_OPTIONS,\r\n  SORT_OPTION_LABELS,\r\n  MACRO_THRESHOLDS,\r\n};\r\n\r\nexport default constants;\r\n","/**\r\n * Diet Food Management Dashboard\r\n * Main dashboard component for managing food database\r\n */\r\n\r\nimport React from 'react';\r\nimport { Box, Typography, Grid, Card, CardContent, Chip } from '@mui/material';\r\nimport {\r\n  Restaurant as RestaurantIcon,\r\n  LocalFireDepartment as CalorieIcon,\r\n  FitnessCenter as ProteinIcon,\r\n  Grass as VeganIcon,\r\n  TrendingUp as TrendingIcon,\r\n} from '@mui/icons-material';\r\nimport { useDietFood } from '../context/DietFoodContext';\r\nimport {\r\n  FOOD_CATEGORIES,\r\n  FOOD_CATEGORY_LABELS,\r\n  FOOD_CATEGORY_COLORS,\r\n  DIETARY_TAGS,\r\n} from '../constants';\r\n\r\nconst DietFoodDashboard = () => {\r\n  const { allFoods, loading } = useDietFood();\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ p: 3, textAlign: 'center' }}>\r\n        <Typography>Loading food database...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Calculate statistics\r\n  const stats = {\r\n    totalFoods: allFoods.length,\r\n    activeRoods: allFoods.filter((food) => food.isActive).length,\r\n    categories: Object.keys(FOOD_CATEGORIES).length,\r\n    avgCalories: Math.round(\r\n      allFoods.reduce((sum, food) => sum + food.nutritionPer100g.calories, 0) /\r\n        allFoods.length\r\n    ),\r\n  };\r\n\r\n  // Category distribution\r\n  const categoryStats = Object.values(FOOD_CATEGORIES)\r\n    .map((category) => {\r\n      const count = allFoods.filter(\r\n        (food) => food.category === category\r\n      ).length;\r\n      const avgCalories = Math.round(\r\n        allFoods\r\n          .filter((food) => food.category === category)\r\n          .reduce((sum, food) => sum + food.nutritionPer100g.calories, 0) /\r\n          count || 0\r\n      );\r\n\r\n      return {\r\n        category,\r\n        count,\r\n        avgCalories,\r\n        label: FOOD_CATEGORY_LABELS[category],\r\n        color: FOOD_CATEGORY_COLORS[category],\r\n      };\r\n    })\r\n    .filter((stat) => stat.count > 0);\r\n\r\n  // Top dietary tags\r\n  const dietaryTagStats = Object.values(DIETARY_TAGS)\r\n    .map((tag) => {\r\n      const count = allFoods.filter((food) =>\r\n        food.dietaryTags.includes(tag)\r\n      ).length;\r\n      return { tag, count };\r\n    })\r\n    .filter((stat) => stat.count > 0)\r\n    .sort((a, b) => b.count - a.count)\r\n    .slice(0, 8);\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      {/* Header */}\r\n      <Box sx={{ mb: 4 }}>\r\n        <Typography variant='h4' component='h1' gutterBottom>\r\n          Food Database Dashboard\r\n        </Typography>\r\n        <Typography variant='body1' color='text.secondary'>\r\n          Overview of your complete food database with nutritional information\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* Overview Stats */}\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                <RestaurantIcon color='primary' sx={{ fontSize: 40 }} />\r\n                <Box>\r\n                  <Typography variant='h4' component='div'>\r\n                    {stats.totalFoods}\r\n                  </Typography>\r\n                  <Typography variant='body2' color='text.secondary'>\r\n                    Total Foods\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                <TrendingIcon color='success' sx={{ fontSize: 40 }} />\r\n                <Box>\r\n                  <Typography variant='h4' component='div'>\r\n                    {stats.activeRoods}\r\n                  </Typography>\r\n                  <Typography variant='body2' color='text.secondary'>\r\n                    Active Foods\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                <VeganIcon color='secondary' sx={{ fontSize: 40 }} />\r\n                <Box>\r\n                  <Typography variant='h4' component='div'>\r\n                    {stats.categories}\r\n                  </Typography>\r\n                  <Typography variant='body2' color='text.secondary'>\r\n                    Categories\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                <CalorieIcon color='warning' sx={{ fontSize: 40 }} />\r\n                <Box>\r\n                  <Typography variant='h4' component='div'>\r\n                    {stats.avgCalories}\r\n                  </Typography>\r\n                  <Typography variant='body2' color='text.secondary'>\r\n                    Avg Calories/100g\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Category Breakdown */}\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        <Grid size={{ xs: 12, md: 8 }}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant='h6' gutterBottom>\r\n                Food Categories\r\n              </Typography>\r\n              <Grid container spacing={2}>\r\n                {categoryStats.map((stat) => (\r\n                  <Grid key={stat.category} size={{ xs: 12, sm: 6, md: 4 }}>\r\n                    <Box\r\n                      sx={{\r\n                        p: 2,\r\n                        border: 1,\r\n                        borderColor: 'divider',\r\n                        borderRadius: 1,\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      <Typography variant='h6' component='div'>\r\n                        {stat.count}\r\n                      </Typography>\r\n                      <Chip\r\n                        label={stat.label}\r\n                        color={stat.color}\r\n                        size='small'\r\n                        sx={{ mb: 1 }}\r\n                      />\r\n                      <Typography\r\n                        variant='caption'\r\n                        color='text.secondary'\r\n                        display='block'\r\n                      >\r\n                        Avg: {stat.avgCalories} cal/100g\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid size={{ xs: 12, md: 4 }}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant='h6' gutterBottom>\r\n                Popular Dietary Tags\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n                {dietaryTagStats.map((stat) => (\r\n                  <Box\r\n                    key={stat.tag}\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      alignItems: 'center',\r\n                      p: 1,\r\n                      bgcolor: 'action.hover',\r\n                      borderRadius: 1,\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant='body2'\r\n                      sx={{ textTransform: 'capitalize' }}\r\n                    >\r\n                      {stat.tag.replace('-', ' ')}\r\n                    </Typography>\r\n                    <Chip\r\n                      label={stat.count}\r\n                      size='small'\r\n                      color='primary'\r\n                      variant='outlined'\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Quick Actions */}\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant='h6' gutterBottom>\r\n            Quick Stats\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\r\n              <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                <ProteinIcon color='error' sx={{ fontSize: 32, mb: 1 }} />\r\n                <Typography variant='h6'>\r\n                  {\r\n                    allFoods.filter(\r\n                      (food) => food.nutritionPer100g.protein >= 15\r\n                    ).length\r\n                  }\r\n                </Typography>\r\n                <Typography variant='caption' color='text.secondary'>\r\n                  High Protein Foods (≥15g)\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\r\n              <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                <CalorieIcon color='success' sx={{ fontSize: 32, mb: 1 }} />\r\n                <Typography variant='h6'>\r\n                  {\r\n                    allFoods.filter(\r\n                      (food) => food.nutritionPer100g.calories <= 50\r\n                    ).length\r\n                  }\r\n                </Typography>\r\n                <Typography variant='caption' color='text.secondary'>\r\n                  Low Calorie Foods (≤50 cal)\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\r\n              <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                <VeganIcon color='success' sx={{ fontSize: 32, mb: 1 }} />\r\n                <Typography variant='h6'>\r\n                  {\r\n                    allFoods.filter((food) =>\r\n                      food.dietaryTags.includes('vegan')\r\n                    ).length\r\n                  }\r\n                </Typography>\r\n                <Typography variant='caption' color='text.secondary'>\r\n                  Vegan Options\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid size={{ xs: 12, sm: 6, md: 3 }}>\r\n              <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                <RestaurantIcon color='primary' sx={{ fontSize: 32, mb: 1 }} />\r\n                <Typography variant='h6'>\r\n                  {\r\n                    allFoods.filter((food) => food.allergens.length === 0)\r\n                      .length\r\n                  }\r\n                </Typography>\r\n                <Typography variant='caption' color='text.secondary'>\r\n                  Allergen-Free Foods\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DietFoodDashboard;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2M6 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m12-8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m-4 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'Grain');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.66 8 12 2.35 6.34 8C4.78 9.56 4 11.64 4 13.64s.78 4.11 2.34 5.67 3.61 2.35 5.66 2.35 4.1-.79 5.66-2.35S20 15.64 20 13.64 19.22 9.56 17.66 8M6 14c.01-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 17.99 12 18 14z\"\n}), 'Opacity');","/**\r\n * Food Card Component\r\n * Displays individual food item with nutrition info and actions\r\n */\r\n\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Chip,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem as MenuItemComponent,\r\n  Avatar,\r\n  Divider,\r\n  Tooltip,\r\n  Skeleton,\r\n} from '@mui/material';\r\nimport {\r\n  MoreVert as MoreVertIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Visibility as ViewIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  LocalFireDepartment as CalorieIcon,\r\n  FitnessCenter as ProteinIcon,\r\n  Grain as CarbIcon,\r\n  Opacity as FatIcon,\r\n} from '@mui/icons-material';\r\nimport {\r\n  FOOD_CATEGORY_LABELS,\r\n  FOOD_CATEGORY_COLORS,\r\n  FOOD_SUBCATEGORY_LABELS,\r\n  DIETARY_TAG_LABELS,\r\n  DIETARY_TAG_COLORS,\r\n} from '../constants';\r\n\r\nconst FoodCard = ({ food, onEdit, onDelete, onToggleStatus }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [imageError, setImageError] = React.useState(false);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenuClick = (event) => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleMenuClose();\r\n    onEdit(food);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    handleMenuClose();\r\n    if (window.confirm(`Are you sure you want to delete \"${food.name}\"?`)) {\r\n      onDelete(food.id);\r\n    }\r\n  };\r\n\r\n  const handleToggleStatus = () => {\r\n    handleMenuClose();\r\n    onToggleStatus(food.id);\r\n  };\r\n\r\n  const nutrition = food.nutritionPer100g;\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        height: '100%',\r\n        cursor: 'pointer',\r\n        transition: 'all 0.2s ease-in-out',\r\n        opacity: food.isActive ? 1 : 0.6,\r\n        '&:hover': {\r\n          transform: 'translateY(-2px)',\r\n          boxShadow: 4,\r\n        },\r\n      }}\r\n    >\r\n      {/* Food Image */}\r\n      {imageError || !food.image ? (\r\n        <Skeleton\r\n          variant='rectangular'\r\n          height={160}\r\n          sx={{\r\n            backgroundColor: 'grey.100',\r\n          }}\r\n        />\r\n      ) : (\r\n        <CardMedia\r\n          component='img'\r\n          height='160'\r\n          image={food.image}\r\n          alt={food.name}\r\n          sx={{\r\n            objectFit: 'cover',\r\n            backgroundColor: 'grey.100',\r\n          }}\r\n          onError={() => setImageError(true)}\r\n        />\r\n      )}\r\n\r\n      <CardContent>\r\n        {/* Header with menu */}\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'flex-start',\r\n            mb: 1,\r\n          }}\r\n        >\r\n          <Box sx={{ flex: 1 }}>\r\n            <Typography variant='h6' component='h3' gutterBottom noWrap>\r\n              {food.name}\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap', mb: 1 }}>\r\n              <Chip\r\n                label={FOOD_CATEGORY_LABELS[food.category] || food.category}\r\n                color={FOOD_CATEGORY_COLORS[food.category] || 'default'}\r\n                size='small'\r\n              />\r\n              {food.subcategory && (\r\n                <Chip\r\n                  label={\r\n                    FOOD_SUBCATEGORY_LABELS[food.subcategory] ||\r\n                    food.subcategory\r\n                  }\r\n                  variant='outlined'\r\n                  size='small'\r\n                />\r\n              )}\r\n            </Box>\r\n          </Box>\r\n\r\n          <IconButton onClick={handleMenuClick} size='small' sx={{ ml: 1 }}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleMenuClose}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <MenuItemComponent onClick={handleEdit}>\r\n              <EditIcon fontSize='small' sx={{ mr: 1 }} />\r\n              Edit Food\r\n            </MenuItemComponent>\r\n            <MenuItemComponent onClick={handleToggleStatus}>\r\n              {food.isActive ? (\r\n                <VisibilityOffIcon fontSize='small' sx={{ mr: 1 }} />\r\n              ) : (\r\n                <ViewIcon fontSize='small' sx={{ mr: 1 }} />\r\n              )}\r\n              {food.isActive ? 'Deactivate' : 'Activate'}\r\n            </MenuItemComponent>\r\n            <MenuItemComponent\r\n              onClick={handleDelete}\r\n              sx={{ color: 'error.main' }}\r\n            >\r\n              <DeleteIcon fontSize='small' sx={{ mr: 1 }} />\r\n              Delete Food\r\n            </MenuItemComponent>\r\n          </Menu>\r\n        </Box>\r\n\r\n        {/* Description */}\r\n        <Typography\r\n          variant='body2'\r\n          color='text.secondary'\r\n          sx={{\r\n            mb: 2,\r\n            display: '-webkit-box',\r\n            overflow: 'hidden',\r\n            WebkitBoxOrient: 'vertical',\r\n            WebkitLineClamp: 2,\r\n          }}\r\n        >\r\n          {food.description}\r\n        </Typography>\r\n\r\n        {/* Nutrition Summary */}\r\n        <Box sx={{ mb: 2 }}>\r\n          <Grid container spacing={1}>\r\n            <Grid size={3}>\r\n              <Box sx={{ textAlign: 'center' }}>\r\n                <CalorieIcon fontSize='small' color='primary' />\r\n                <Typography variant='caption' display='block' fontWeight='bold'>\r\n                  {nutrition.calories}\r\n                </Typography>\r\n                <Typography variant='caption' color='text.secondary'>\r\n                  cal\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid size={3}>\r\n              <Box sx={{ textAlign: 'center' }}>\r\n                <ProteinIcon fontSize='small' color='error' />\r\n                <Typography variant='caption' display='block' fontWeight='bold'>\r\n                  {nutrition.protein}g\r\n                </Typography>\r\n                <Typography variant='caption' color='text.secondary'>\r\n                  protein\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid size={3}>\r\n              <Box sx={{ textAlign: 'center' }}>\r\n                <CarbIcon fontSize='small' color='warning' />\r\n                <Typography variant='caption' display='block' fontWeight='bold'>\r\n                  {nutrition.carbs}g\r\n                </Typography>\r\n                <Typography variant='caption' color='text.secondary'>\r\n                  carbs\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid size={3}>\r\n              <Box sx={{ textAlign: 'center' }}>\r\n                <FatIcon fontSize='small' color='info' />\r\n                <Typography variant='caption' display='block' fontWeight='bold'>\r\n                  {nutrition.fats}g\r\n                </Typography>\r\n                <Typography variant='caption' color='text.secondary'>\r\n                  fats\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider sx={{ mb: 2 }} />\r\n\r\n        {/* Dietary Tags */}\r\n        <Box sx={{ mb: 2 }}>\r\n          <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\r\n            {food.dietaryTags.slice(0, 3).map((tag) => (\r\n              <Chip\r\n                key={tag}\r\n                label={DIETARY_TAG_LABELS[tag] || tag}\r\n                size='small'\r\n                variant='outlined'\r\n                color={DIETARY_TAG_COLORS[tag] || 'default'}\r\n              />\r\n            ))}\r\n            {food.dietaryTags.length > 3 && (\r\n              <Chip\r\n                label={`+${food.dietaryTags.length - 3} more`}\r\n                size='small'\r\n                variant='outlined'\r\n                color='default'\r\n              />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography variant='caption' color='text.secondary'>\r\n            Per {food.servingSize}\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            {food.allergens.length > 0 && (\r\n              <Tooltip title={`Allergens: ${food.allergens.join(', ')}`}>\r\n                <Chip\r\n                  label='⚠️'\r\n                  size='small'\r\n                  color='warning'\r\n                  variant='outlined'\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <Avatar sx={{ width: 24, height: 24, fontSize: '0.75rem' }}>\r\n              {food.category.charAt(0).toUpperCase()}\r\n            </Avatar>\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(FoodCard);\r\n","/**\r\n * Food Database Filters Component\r\n * Provides search, category, subcategory, and sorting filters for the food database\r\n */\r\n\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  InputAdornment,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n} from '@mui/material';\r\nimport {\r\n  Search as SearchIcon,\r\n  FilterList as FilterListIcon,\r\n} from '@mui/icons-material';\r\nimport {\r\n  FOOD_CATEGORY_LABELS,\r\n  FOOD_SUBCATEGORY_LABELS,\r\n  SORT_OPTION_LABELS,\r\n} from '../constants';\r\n\r\nconst FoodDatabaseFilters = ({\r\n  searchTerm,\r\n  setSearchTerm,\r\n  selectedCategory,\r\n  setSelectedCategory,\r\n  selectedSubcategory,\r\n  setSelectedSubcategory,\r\n  sortBy,\r\n  setSortBy,\r\n  availableSubcategories,\r\n  clearFilters,\r\n}) => {\r\n  return (\r\n    <Box sx={{ mb: 3 }}>\r\n      <Grid container spacing={2} alignItems='center'>\r\n        <Grid size={{ xs: 12, sm: 4 }}>\r\n          <TextField\r\n            fullWidth\r\n            placeholder='Search foods...'\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position='start'>\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid size={{ xs: 6, sm: 2 }}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Category</InputLabel>\r\n            <Select\r\n              value={selectedCategory}\r\n              onChange={(e) => setSelectedCategory(e.target.value)}\r\n              label='Category'\r\n            >\r\n              <MenuItem value='all'>All Categories</MenuItem>\r\n              {Object.entries(FOOD_CATEGORY_LABELS).map(([value, label]) => (\r\n                <MenuItem key={value} value={value}>\r\n                  {label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid size={{ xs: 6, sm: 2 }}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Subcategory</InputLabel>\r\n            <Select\r\n              value={selectedSubcategory}\r\n              onChange={(e) => setSelectedSubcategory(e.target.value)}\r\n              label='Subcategory'\r\n              disabled={selectedCategory === 'all'}\r\n            >\r\n              <MenuItem value='all'>All Subcategories</MenuItem>\r\n              {availableSubcategories.map((subcategory) => (\r\n                <MenuItem key={subcategory} value={subcategory}>\r\n                  {FOOD_SUBCATEGORY_LABELS[subcategory] || subcategory}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid size={{ xs: 6, sm: 2 }}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Sort By</InputLabel>\r\n            <Select\r\n              value={sortBy}\r\n              onChange={(e) => setSortBy(e.target.value)}\r\n              label='Sort By'\r\n            >\r\n              {Object.entries(SORT_OPTION_LABELS).map(([value, label]) => (\r\n                <MenuItem key={value} value={value}>\r\n                  {label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid size={{ xs: 6, sm: 2 }}>\r\n          <Button\r\n            variant='outlined'\r\n            startIcon={<FilterListIcon />}\r\n            onClick={clearFilters}\r\n            fullWidth\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FoodDatabaseFilters;\r\n","/**\r\n * Diet Food List Component\r\n * Displays and manages the list of foods with filtering and search\r\n */\r\n\r\nimport React from 'react';\r\nimport { Box, Typography, Button, Grid } from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Restaurant as RestaurantIcon,\r\n} from '@mui/icons-material';\r\nimport { useDietFood } from '../context/DietFoodContext';\r\nimport FoodCard from './FoodCard';\r\nimport FoodDatabaseFilters from './FoodDatabaseFilters';\r\n\r\nconst DietFoodList = () => {\r\n  const {\r\n    foods,\r\n    loading,\r\n    searchTerm,\r\n    setSearchTerm,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    selectedSubcategory,\r\n    setSelectedSubcategory,\r\n    sortBy,\r\n    setSortBy,\r\n    availableSubcategories,\r\n    openCreateModal,\r\n    openEditModal,\r\n    deleteFood,\r\n    toggleFoodStatus,\r\n    clearFilters,\r\n  } = useDietFood();\r\n\r\n  const handleCreateFood = () => {\r\n    openCreateModal();\r\n  };\r\n\r\n  const handleEditFood = (food) => {\r\n    openEditModal(food);\r\n  };\r\n\r\n  const handleDeleteFood = async (foodId) => {\r\n    await deleteFood(foodId);\r\n  };\r\n\r\n  const handleToggleStatus = async (foodId) => {\r\n    await toggleFoodStatus(foodId);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ p: 3, textAlign: 'center' }}>\r\n        <Typography>Loading foods...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      {/* Header */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          mb: 3,\r\n        }}\r\n      >\r\n        <Typography variant='h5' component='h1'>\r\n          Food Database ({foods.length})\r\n        </Typography>\r\n        <Button\r\n          variant='contained'\r\n          startIcon={<AddIcon />}\r\n          onClick={handleCreateFood}\r\n          sx={{ minWidth: 140 }}\r\n        >\r\n          Add Food\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Filters */}\r\n      <FoodDatabaseFilters\r\n        searchTerm={searchTerm}\r\n        setSearchTerm={setSearchTerm}\r\n        selectedCategory={selectedCategory}\r\n        setSelectedCategory={setSelectedCategory}\r\n        selectedSubcategory={selectedSubcategory}\r\n        setSelectedSubcategory={setSelectedSubcategory}\r\n        sortBy={sortBy}\r\n        setSortBy={setSortBy}\r\n        availableSubcategories={availableSubcategories}\r\n        clearFilters={clearFilters}\r\n      />\r\n\r\n      {/* Foods Grid */}\r\n      {foods.length === 0 ? (\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            py: 8,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <RestaurantIcon\r\n            sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }}\r\n          />\r\n          <Typography variant='h6' color='text.secondary' gutterBottom>\r\n            {searchTerm || selectedCategory !== 'all'\r\n              ? 'No foods match your filters'\r\n              : 'No foods found'}\r\n          </Typography>\r\n          <Typography variant='body2' color='text.secondary' sx={{ mb: 3 }}>\r\n            {searchTerm || selectedCategory !== 'all'\r\n              ? 'Try adjusting your search criteria or filters'\r\n              : 'Add your first food to get started'}\r\n          </Typography>\r\n          <Button\r\n            variant='contained'\r\n            startIcon={<AddIcon />}\r\n            onClick={handleCreateFood}\r\n          >\r\n            Add Food\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {foods.map((food) => (\r\n            <Grid key={food.id} size={{ xs: 12, sm: 6, md: 4, xl: 3 }}>\r\n              <FoodCard\r\n                food={food}\r\n                onEdit={handleEditFood}\r\n                onDelete={handleDeleteFood}\r\n                onToggleStatus={handleToggleStatus}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DietFoodList;\r\n","/**\r\n * Diet Food Management Main App Component\r\n * Main component that provides routing and layout for food management\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Box, Typography, Tabs, Tab, Paper } from '@mui/material';\r\nimport {\r\n  Dashboard as DashboardIcon,\r\n  Restaurant as RestaurantIcon,\r\n} from '@mui/icons-material';\r\nimport { DietFoodProvider } from '../context/DietFoodContext';\r\nimport DietFoodDashboard from './DietFoodDashboard';\r\nimport DietFoodList from './DietFoodList';\r\n\r\nconst DietFoodApp = () => {\r\n  const [currentTab, setCurrentTab] = useState(0);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n\r\n  const renderCurrentView = () => {\r\n    switch (currentTab) {\r\n      case 0:\r\n        return <DietFoodDashboard />;\r\n      case 1:\r\n        return <DietFoodList />;\r\n      default:\r\n        return <DietFoodDashboard />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DietFoodProvider>\r\n      <Box sx={{ width: '100%' }}>\r\n        {/* Header */}\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant='h4' component='h1' gutterBottom>\r\n            Food Database Management\r\n          </Typography>\r\n          <Typography variant='body1' color='text.secondary'>\r\n            Manage your comprehensive food database with nutritional information\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Navigation Tabs */}\r\n        <Paper sx={{ mb: 3 }}>\r\n          <Tabs\r\n            value={currentTab}\r\n            onChange={handleTabChange}\r\n            indicatorColor='primary'\r\n            textColor='primary'\r\n          >\r\n            <Tab\r\n              icon={<DashboardIcon />}\r\n              label='Dashboard'\r\n              iconPosition='start'\r\n            />\r\n            <Tab\r\n              icon={<RestaurantIcon />}\r\n              label='Food Database'\r\n              iconPosition='start'\r\n            />\r\n          </Tabs>\r\n        </Paper>\r\n\r\n        {/* Current View */}\r\n        <Box>{renderCurrentView()}</Box>\r\n      </Box>\r\n    </DietFoodProvider>\r\n  );\r\n};\r\n\r\nexport default DietFoodApp;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');"],"names":["createSvgIcon","_jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_span","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","memoTheme","_ref","theme","display","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","variants","style","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","children","className","component","disableTypography","variantProp","other","_objectWithoutProperties","muiFormControl","useFormControl","_objectSpread","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","DietFoodContext","createContext","DietFoodProvider","foods","setFoods","useState","loading","setLoading","error","setError","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","selectedFood","setSelectedFood","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","selectedSubcategory","setSelectedSubcategory","selectedDietaryTags","setSelectedDietaryTags","sortBy","setSortBy","useEffect","async","Promise","resolve","setTimeout","foodDatabase","err","console","initializeFoods","filteredFoods","useMemo","filtered","filter","food","matchesSearch","toLowerCase","includes","description","category","matchesCategory","matchesSubcategory","subcategory","matchesDietaryTags","length","some","tag","dietaryTags","sort","a","b","localeCompare","nutritionPer100g","calories","protein","Date","createdAt","availableSubcategories","Set","map","contextValue","allFoods","createFood","newFood","foodData","id","now","toISOString","updatedAt","isActive","prev","success","message","updateFood","foodId","updatedFood","deleteFood","toggleFoodStatus","openCreateModal","closeCreateModal","openEditModal","closeEditModal","clearFilters","getFoodById","find","getFoodsByCategory","searchFoodsByName","calculateNutritionForQuantity","quantity","multiplier","Math","round","carbs","fats","fiber","sugar","sodium","useDietFood","context","useContext","Error","FOOD_CATEGORIES","PROTEIN","CARBS","FATS","VEGETABLES","FRUITS","DAIRY","GRAINS","NUTS_SEEDS","BEVERAGES","SUPPLEMENTS","FOOD_CATEGORY_LABELS","FOOD_CATEGORY_COLORS","FOOD_SUBCATEGORIES","POULTRY","FISH","MEAT","ORGAN_MEAT","PLANT_PROTEIN","LEGUMES","SWEETENERS","CRACKERS","CEREALS","OILS","NUTS","SEEDS","AVOCADO","CHOCOLATE","DAIRY_FATS","CHEESE","MILK","PLANT_MILK","YOGURT","LEAFY_GREENS","CRUCIFEROUS","ROOT_VEGETABLES","NIGHTSHADES","GREEN_VEGETABLES","SQUASH","FUNGI","MIXED","BERRIES","CITRUS","TROPICAL","STONE_FRUITS","FRESH","OATS","PSEUDOCEREAL","RICE","RICE_PRODUCTS","BREAD","TREE_NUTS","NUT_BUTTER","FOOD_SUBCATEGORY_LABELS","DIETARY_TAGS","HIGH_PROTEIN","LOW_CARB","KETO_FRIENDLY","PALEO","VEGAN","VEGETARIAN","GLUTEN_FREE","DAIRY_FREE","LOW_CALORIE","HIGH_FIBER","ANTIOXIDANT_RICH","OMEGA_3","HEART_HEALTHY","PROBIOTIC","WHOLE_GRAIN","ORGANIC","DIETARY_TAG_LABELS","DIETARY_TAG_COLORS","ALLERGENS","EGGS","SHELLFISH","PEANUTS","WHEAT","SOY","SESAME","GLUTEN","ALLERGEN_LABELS","PREPARATION_METHODS","RAW","BOILED","STEAMED","GRILLED","BAKED","ROASTED","FRIED","SAUTEED","POACHED","SCRAMBLED","PREPARATION_METHOD_LABELS","SORT_OPTIONS","NAME_ASC","NAME_DESC","CALORIES_ASC","CALORIES_DESC","PROTEIN_ASC","PROTEIN_DESC","CREATED_ASC","CREATED_DESC","SORT_OPTION_LABELS","MACRO_THRESHOLDS","DietFoodDashboard","Box","sx","p","textAlign","stats","totalFoods","activeRoods","categories","Object","keys","avgCalories","reduce","sum","categoryStats","values","count","label","stat","dietaryTagStats","slice","mb","gutterBottom","Grid","container","spacing","xs","sm","md","Card","CardContent","gap","RestaurantIcon","fontSize","TrendingIcon","VeganIcon","CalorieIcon","border","borderColor","borderRadius","Chip","flexDirection","justifyContent","bgcolor","textTransform","replace","ProteinIcon","allergens","FoodCard","onEdit","onDelete","onToggleStatus","anchorEl","setAnchorEl","imageError","setImageError","open","Boolean","handleMenuClose","nutrition","height","cursor","transition","opacity","transform","boxShadow","image","Skeleton","backgroundColor","CardMedia","alt","objectFit","onError","flex","noWrap","flexWrap","IconButton","onClick","event","stopPropagation","currentTarget","ml","MoreVertIcon","Menu","onClose","e","MenuItemComponent","handleEdit","EditIcon","mr","handleToggleStatus","VisibilityOffIcon","ViewIcon","handleDelete","window","confirm","DeleteIcon","overflow","WebkitBoxOrient","WebkitLineClamp","fontWeight","CarbIcon","FatIcon","Divider","servingSize","Tooltip","title","join","Avatar","width","charAt","toUpperCase","TextField","fullWidth","placeholder","onChange","target","InputProps","startAdornment","InputAdornment","SearchIcon","FormControl","InputLabel","Select","MenuItem","entries","_ref2","disabled","_ref3","Button","startIcon","FilterListIcon","DietFoodList","handleCreateFood","handleEditFood","handleDeleteFood","AddIcon","minWidth","FoodDatabaseFilters","py","xl","DietFoodApp","currentTab","setCurrentTab","Paper","Tabs","handleTabChange","newValue","indicatorColor","textColor","Tab","icon","DashboardIcon","iconPosition","renderCurrentView"],"sourceRoot":""}