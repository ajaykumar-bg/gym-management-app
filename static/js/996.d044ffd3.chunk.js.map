{"version":3,"file":"static/js/996.d044ffd3.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Cake.js","../node_modules/@mui/icons-material/esm/Home.js","../node_modules/@mui/icons-material/esm/Phone.js","../node_modules/@mui/icons-material/esm/LocalHospital.js","features/MemberManagement/components/MemberProfile.jsx","../node_modules/@mui/icons-material/esm/Email.js","features/MemberManagement/member.constants.js","../node_modules/@mui/icons-material/esm/ContactEmergency.js","features/MemberManagement/member.utils.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 6c1.11 0 2-.9 2-2 0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2m4.6 9.99-1.07-1.07-1.08 1.07c-1.3 1.3-3.58 1.31-4.89 0l-1.07-1.07-1.09 1.07C6.75 16.64 5.88 17 4.96 17c-.73 0-1.4-.23-1.96-.61V21c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-4.61c-.56.38-1.23.61-1.96.61-.92 0-1.79-.36-2.44-1.01M18 9h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v1.54c0 1.08.88 1.96 1.96 1.96.52 0 1.02-.2 1.38-.57l2.14-2.13 2.13 2.13c.74.74 2.03.74 2.77 0l2.14-2.13 2.13 2.13c.37.37.86.57 1.38.57 1.08 0 1.96-.88 1.96-1.96V12C21 10.34 19.66 9 18 9\"\n}), 'Cake');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"\n}), 'Home');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02z\"\n}), 'Phone');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-1.99.9-1.99 2L3 19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-1 11h-4v4h-4v-4H6v-4h4V6h4v4h4z\"\n}), 'LocalHospital');","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Avatar,\r\n  Chip,\r\n  Box,\r\n  Tabs,\r\n  Tab,\r\n} from '@mui/material';\r\nimport {\r\n  Person,\r\n  Email,\r\n  Phone,\r\n  Cake,\r\n  Home,\r\n  ContactEmergency,\r\n  LocalHospital,\r\n  FitnessCenter,\r\n} from '@mui/icons-material';\r\nimport {\r\n  calculateAge,\r\n  calculateBMI,\r\n  getBMICategory,\r\n  getLatestMeasurements,\r\n} from '../member.utils';\r\n\r\nconst MemberProfile = ({ member, onEdit, onClose, isOwnProfile = false }) => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n\r\n  if (!member) return null;\r\n\r\n  const age = calculateAge(member.dateOfBirth);\r\n  const latestMeasurements = getLatestMeasurements(member);\r\n  const bmi = latestMeasurements\r\n    ? calculateBMI(latestMeasurements.weight, latestMeasurements.height)\r\n    : null;\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const TabPanel = ({ children, value, index }) => (\r\n    <div hidden={value !== index}>\r\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 800, mx: 'auto' }}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ width: 80, height: 80, fontSize: '2rem' }}>\r\n            {member.firstName\r\n              ? member.firstName[0]\r\n              : member.name\r\n              ? member.name[0]\r\n              : '?'}\r\n            {member.lastName\r\n              ? member.lastName[0]\r\n              : member.name\r\n              ? member.name.split(' ')[1]?.[0] || ''\r\n              : ''}\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography variant='h4'>\r\n            {member.firstName && member.lastName\r\n              ? `${member.firstName} ${member.lastName}`\r\n              : member.name || 'Unknown Member'}\r\n          </Typography>\r\n        }\r\n        subheader={\r\n          <Box sx={{ mt: 1 }}>\r\n            <Chip\r\n              label={(\r\n                member.membershipInfo?.status ||\r\n                member.status ||\r\n                'active'\r\n              ).toUpperCase()}\r\n              color='success'\r\n              size='small'\r\n              sx={{ mr: 1 }}\r\n            />\r\n            <Chip\r\n              label={(\r\n                member.membershipInfo?.type ||\r\n                member.membershipType ||\r\n                'basic'\r\n              ).toUpperCase()}\r\n              color='primary'\r\n              size='small'\r\n            />\r\n          </Box>\r\n        }\r\n        action={\r\n          <Box>\r\n            {!isOwnProfile && onEdit && (\r\n              <Button\r\n                variant='outlined'\r\n                onClick={() => onEdit(member)}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                Edit\r\n              </Button>\r\n            )}\r\n            {!isOwnProfile && onClose && (\r\n              <Button variant='text' onClick={onClose}>\r\n                Close\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <CardContent>\r\n        <Tabs\r\n          value={activeTab}\r\n          onChange={handleTabChange}\r\n          sx={{ borderBottom: 1, borderColor: 'divider' }}\r\n        >\r\n          <Tab label='Personal Info' />\r\n          <Tab label='Health Records' />\r\n          <Tab label='Measurements' />\r\n          <Tab label='Membership' />\r\n        </Tabs>\r\n\r\n        <TabPanel value={activeTab} index={0}>\r\n          <Grid container spacing={3}>\r\n            <Grid size={{ xs: 12, md: 6 }}>\r\n              <Box display='flex' alignItems='center' mb={2}>\r\n                <Person sx={{ mr: 2, color: 'primary.main' }} />\r\n                <Box>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Full Name\r\n                  </Typography>\r\n                  <Typography variant='h6'>\r\n                    {member.firstName && member.lastName\r\n                      ? `${member.firstName} ${member.lastName}`\r\n                      : member.name || 'Unknown Member'}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box display='flex' alignItems='center' mb={2}>\r\n                <Email sx={{ mr: 2, color: 'primary.main' }} />\r\n                <Box>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Email\r\n                  </Typography>\r\n                  <Typography variant='h6'>{member.email}</Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box display='flex' alignItems='center' mb={2}>\r\n                <Phone sx={{ mr: 2, color: 'primary.main' }} />\r\n                <Box>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Phone\r\n                  </Typography>\r\n                  <Typography variant='h6'>{member.phone}</Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box display='flex' alignItems='center' mb={2}>\r\n                <Cake sx={{ mr: 2, color: 'primary.main' }} />\r\n                <Box>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Age\r\n                  </Typography>\r\n                  <Typography variant='h6'>{age} years old</Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid size={{ xs: 12, md: 6 }}>\r\n              <Box display='flex' alignItems='flex-start' mb={2}>\r\n                <Home sx={{ mr: 2, color: 'primary.main', mt: 0.5 }} />\r\n                <Box>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Address\r\n                  </Typography>\r\n                  <Typography variant='body1'>\r\n                    {member.address?.street ? (\r\n                      <>\r\n                        {member.address.street}\r\n                        <br />\r\n                        {member.address.city}, {member.address.state}{' '}\r\n                        {member.address.zipCode}\r\n                      </>\r\n                    ) : (\r\n                      member.address || 'No address provided'\r\n                    )}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box display='flex' alignItems='flex-start' mb={2}>\r\n                <ContactEmergency\r\n                  sx={{ mr: 2, color: 'primary.main', mt: 0.5 }}\r\n                />\r\n                <Box>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Emergency Contact\r\n                  </Typography>\r\n                  <Typography variant='body1'>\r\n                    {member.emergencyContact?.name || 'No emergency contact'}\r\n                    {member.emergencyContact?.relation &&\r\n                      ` (${member.emergencyContact.relation})`}\r\n                    {member.emergencyContact?.relationship &&\r\n                      ` (${member.emergencyContact.relationship})`}\r\n                    <br />\r\n                    {member.emergencyContact?.phone || 'No phone provided'}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {member.notes && (\r\n                <Box>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Notes\r\n                  </Typography>\r\n                  <Typography variant='body1'>{member.notes}</Typography>\r\n                </Box>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={activeTab} index={1}>\r\n          <Grid container spacing={3}>\r\n            <Grid size={{ xs: 12, md: 6 }}>\r\n              <Box display='flex' alignItems='center' mb={2}>\r\n                <LocalHospital sx={{ mr: 2, color: 'error.main' }} />\r\n                <Box>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Blood Group\r\n                  </Typography>\r\n                  <Typography variant='h6'>\r\n                    {member.healthInfo?.bloodGroup || 'Not specified'}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box mb={2}>\r\n                <Typography variant='body2' color='textSecondary' gutterBottom>\r\n                  Allergies\r\n                </Typography>\r\n                <Box>\r\n                  {member.healthInfo?.allergies?.length > 0 ? (\r\n                    member.healthInfo.allergies.map((allergy, index) => (\r\n                      <Chip\r\n                        key={index}\r\n                        label={allergy}\r\n                        size='small'\r\n                        sx={{ mr: 1, mb: 1 }}\r\n                        color='warning'\r\n                      />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant='body2' color='textSecondary'>\r\n                      None reported\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid size={{ xs: 12, md: 6 }}>\r\n              <Box mb={2}>\r\n                <Typography variant='body2' color='textSecondary' gutterBottom>\r\n                  Medical Conditions\r\n                </Typography>\r\n                <Box>\r\n                  {member.healthInfo?.medicalConditions?.length > 0 ? (\r\n                    member.healthInfo.medicalConditions.map(\r\n                      (condition, index) => (\r\n                        <Chip\r\n                          key={index}\r\n                          label={condition}\r\n                          size='small'\r\n                          sx={{ mr: 1, mb: 1 }}\r\n                          color='error'\r\n                        />\r\n                      )\r\n                    )\r\n                  ) : (\r\n                    <Typography variant='body2' color='textSecondary'>\r\n                      None reported\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box mb={2}>\r\n                <Typography variant='body2' color='textSecondary' gutterBottom>\r\n                  Current Medications\r\n                </Typography>\r\n                <Box>\r\n                  {member.healthInfo?.medications?.length > 0 ? (\r\n                    member.healthInfo.medications.map((medication, index) => (\r\n                      <Chip\r\n                        key={index}\r\n                        label={medication}\r\n                        size='small'\r\n                        sx={{ mr: 1, mb: 1 }}\r\n                        color='info'\r\n                      />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant='body2' color='textSecondary'>\r\n                      None reported\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={activeTab} index={2}>\r\n          {latestMeasurements ? (\r\n            <Grid container spacing={3}>\r\n              <Grid size={{ xs: 12, md: 4 }}>\r\n                <Typography variant='h6' gutterBottom>\r\n                  Body Composition\r\n                </Typography>\r\n                <Box mb={2}>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Weight\r\n                  </Typography>\r\n                  <Typography variant='h5'>\r\n                    {latestMeasurements.weight} kg\r\n                  </Typography>\r\n                </Box>\r\n                <Box mb={2}>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Height\r\n                  </Typography>\r\n                  <Typography variant='h5'>\r\n                    {latestMeasurements.height} cm\r\n                  </Typography>\r\n                </Box>\r\n                <Box mb={2}>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    BMI\r\n                  </Typography>\r\n                  <Typography variant='h5'>\r\n                    {bmi}{' '}\r\n                    <Chip\r\n                      label={getBMICategory(bmi)}\r\n                      size='small'\r\n                      sx={{ ml: 1 }}\r\n                    />\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid size={{ xs: 12, md: 4 }}>\r\n                <Typography variant='h6' gutterBottom>\r\n                  Body Fat & Muscle\r\n                </Typography>\r\n                <Box mb={2}>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Body Fat\r\n                  </Typography>\r\n                  <Typography variant='h5'>\r\n                    {latestMeasurements.bodyFat}%\r\n                  </Typography>\r\n                </Box>\r\n                <Box mb={2}>\r\n                  <Typography variant='body2' color='textSecondary'>\r\n                    Muscle Mass\r\n                  </Typography>\r\n                  <Typography variant='h5'>\r\n                    {latestMeasurements.muscleMass} kg\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid size={{ xs: 12, md: 4 }}>\r\n                <Typography variant='h6' gutterBottom>\r\n                  Body Measurements\r\n                </Typography>\r\n                <Box display='flex' flexDirection='column' gap={1}>\r\n                  <Box display='flex' justifyContent='space-between'>\r\n                    <Typography variant='body2'>Chest:</Typography>\r\n                    <Typography variant='body1'>\r\n                      {latestMeasurements.measurements.chest} cm\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display='flex' justifyContent='space-between'>\r\n                    <Typography variant='body2'>Waist:</Typography>\r\n                    <Typography variant='body1'>\r\n                      {latestMeasurements.measurements.waist} cm\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display='flex' justifyContent='space-between'>\r\n                    <Typography variant='body2'>Hips:</Typography>\r\n                    <Typography variant='body1'>\r\n                      {latestMeasurements.measurements.hips} cm\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display='flex' justifyContent='space-between'>\r\n                    <Typography variant='body2'>Biceps:</Typography>\r\n                    <Typography variant='body1'>\r\n                      {latestMeasurements.measurements.biceps} cm\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display='flex' justifyContent='space-between'>\r\n                    <Typography variant='body2'>Thighs:</Typography>\r\n                    <Typography variant='body1'>\r\n                      {latestMeasurements.measurements.thighs} cm\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid size={{ xs: 12 }}>\r\n                <Typography variant='caption' color='textSecondary'>\r\n                  Last updated:{' '}\r\n                  {new Date(latestMeasurements.date).toLocaleDateString()}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <Box textAlign='center' py={4}>\r\n              <FitnessCenter\r\n                sx={{ fontSize: 64, color: 'text.disabled', mb: 2 }}\r\n              />\r\n              <Typography variant='h6' color='textSecondary'>\r\n                No measurements recorded\r\n              </Typography>\r\n              <Typography variant='body2' color='textSecondary'>\r\n                Add body measurements to track member progress\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={activeTab} index={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid size={{ xs: 12, md: 6 }}>\r\n              <Typography variant='h6' gutterBottom>\r\n                Membership Details\r\n              </Typography>\r\n              <Box mb={2}>\r\n                <Typography variant='body2' color='textSecondary'>\r\n                  Membership Type\r\n                </Typography>\r\n                <Typography variant='h5'>\r\n                  <Chip\r\n                    label={(\r\n                      member.membershipInfo?.type ||\r\n                      member.membershipType ||\r\n                      'basic'\r\n                    ).toUpperCase()}\r\n                    color='primary'\r\n                    size='large'\r\n                  />\r\n                </Typography>\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Typography variant='body2' color='textSecondary'>\r\n                  Status\r\n                </Typography>\r\n                <Typography variant='h5'>\r\n                  <Chip\r\n                    label={(\r\n                      member.membershipInfo?.status ||\r\n                      member.status ||\r\n                      'active'\r\n                    ).toUpperCase()}\r\n                    color='success'\r\n                    size='large'\r\n                  />\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid size={{ xs: 12, md: 6 }}>\r\n              <Typography variant='h6' gutterBottom>\r\n                Membership Duration\r\n              </Typography>\r\n              <Box mb={2}>\r\n                <Typography variant='body2' color='textSecondary'>\r\n                  Start Date\r\n                </Typography>\r\n                <Typography variant='h6'>\r\n                  {member.membershipInfo?.startDate\r\n                    ? new Date(\r\n                        member.membershipInfo.startDate\r\n                      ).toLocaleDateString()\r\n                    : member.joinDate\r\n                    ? new Date(member.joinDate).toLocaleDateString()\r\n                    : 'Not specified'}\r\n                </Typography>\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Typography variant='body2' color='textSecondary'>\r\n                  End Date\r\n                </Typography>\r\n                <Typography variant='h6'>\r\n                  {member.membershipInfo?.endDate\r\n                    ? new Date(\r\n                        member.membershipInfo.endDate\r\n                      ).toLocaleDateString()\r\n                    : 'Not specified'}\r\n                </Typography>\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Typography variant='body2' color='textSecondary'>\r\n                  Join Date\r\n                </Typography>\r\n                <Typography variant='h6'>\r\n                  {member.joinDate\r\n                    ? new Date(member.joinDate).toLocaleDateString()\r\n                    : 'Not specified'}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MemberProfile;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","// Member Management constants and mock data\r\n\r\nexport const MEMBER_STATUS = {\r\n  ACTIVE: 'active',\r\n  INACTIVE: 'inactive',\r\n  SUSPENDED: 'suspended',\r\n  EXPIRED: 'expired',\r\n};\r\n\r\nexport const MEMBERSHIP_TYPES = {\r\n  BASIC: 'basic',\r\n  PREMIUM: 'premium',\r\n  VIP: 'vip',\r\n  LIFETIME: 'lifetime',\r\n};\r\n\r\nexport const BLOOD_GROUPS = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\r\n\r\nexport const EMERGENCY_RELATIONS = [\r\n  'Spouse',\r\n  'Parent',\r\n  'Child',\r\n  'Sibling',\r\n  'Friend',\r\n  'Other',\r\n];\r\n\r\nexport const MOCK_MEMBERS = [\r\n  {\r\n    id: 'MEM001',\r\n    firstName: 'John',\r\n    lastName: 'Doe',\r\n    email: 'john.doe@email.com',\r\n    phone: '+1-555-0123',\r\n    dateOfBirth: '1990-05-15',\r\n    gender: 'Male',\r\n    address: {\r\n      street: '123 Main St',\r\n      city: 'New York',\r\n      state: 'NY',\r\n      zipCode: '10001',\r\n    },\r\n    emergencyContact: {\r\n      name: 'Jane Doe',\r\n      phone: '+1-555-0124',\r\n      relation: 'Spouse',\r\n    },\r\n    healthInfo: {\r\n      bloodGroup: 'O+',\r\n      allergies: ['Nuts', 'Shellfish'],\r\n      medicalConditions: [],\r\n      medications: [],\r\n    },\r\n    membershipInfo: {\r\n      type: MEMBERSHIP_TYPES.PREMIUM,\r\n      startDate: '2024-01-15',\r\n      endDate: '2024-12-15',\r\n      status: MEMBER_STATUS.ACTIVE,\r\n    },\r\n    trainerId: 'TR001',\r\n    joinDate: '2024-01-15',\r\n    profileImage: null,\r\n    bodyMeasurements: [\r\n      {\r\n        date: '2024-01-15',\r\n        weight: 75.5,\r\n        height: 175,\r\n        bodyFat: 15.2,\r\n        muscleMass: 45.8,\r\n        measurements: {\r\n          chest: 102,\r\n          waist: 82,\r\n          hips: 95,\r\n          biceps: 35,\r\n          thighs: 58,\r\n        },\r\n      },\r\n      {\r\n        date: '2024-06-15',\r\n        weight: 73.2,\r\n        height: 175,\r\n        bodyFat: 12.8,\r\n        muscleMass: 47.1,\r\n        measurements: {\r\n          chest: 104,\r\n          waist: 78,\r\n          hips: 93,\r\n          biceps: 37,\r\n          thighs: 56,\r\n        },\r\n      },\r\n    ],\r\n    notes: 'Regular member, goals focused on weight loss and muscle building.',\r\n  },\r\n  {\r\n    id: 'MEM002',\r\n    firstName: 'Sarah',\r\n    lastName: 'Johnson',\r\n    email: 'sarah.j@email.com',\r\n    phone: '+1-555-0125',\r\n    dateOfBirth: '1985-08-22',\r\n    gender: 'Female',\r\n    address: {\r\n      street: '456 Oak Ave',\r\n      city: 'New York',\r\n      state: 'NY',\r\n      zipCode: '10002',\r\n    },\r\n    emergencyContact: {\r\n      name: 'Mike Johnson',\r\n      phone: '+1-555-0126',\r\n      relation: 'Spouse',\r\n    },\r\n    healthInfo: {\r\n      bloodGroup: 'A+',\r\n      allergies: [],\r\n      medicalConditions: ['Hypertension'],\r\n      medications: ['Lisinopril'],\r\n    },\r\n    membershipInfo: {\r\n      type: MEMBERSHIP_TYPES.VIP,\r\n      startDate: '2023-12-01',\r\n      endDate: '2024-11-30',\r\n      status: MEMBER_STATUS.ACTIVE,\r\n    },\r\n    trainerId: 'TR002',\r\n    joinDate: '2023-12-01',\r\n    profileImage: null,\r\n    bodyMeasurements: [\r\n      {\r\n        date: '2023-12-01',\r\n        weight: 62.3,\r\n        height: 168,\r\n        bodyFat: 22.1,\r\n        muscleMass: 32.4,\r\n        measurements: {\r\n          chest: 88,\r\n          waist: 70,\r\n          hips: 92,\r\n          biceps: 28,\r\n          thighs: 52,\r\n        },\r\n      },\r\n    ],\r\n    notes: 'Focused on fitness maintenance and strength training.',\r\n  },\r\n  {\r\n    id: 'MEM003',\r\n    firstName: 'Michael',\r\n    lastName: 'Brown',\r\n    email: 'mike.brown@email.com',\r\n    phone: '+1-555-0127',\r\n    dateOfBirth: '1992-03-10',\r\n    gender: 'Male',\r\n    address: {\r\n      street: '789 Pine St',\r\n      city: 'New York',\r\n      state: 'NY',\r\n      zipCode: '10003',\r\n    },\r\n    emergencyContact: {\r\n      name: 'Lisa Brown',\r\n      phone: '+1-555-0128',\r\n      relation: 'Parent',\r\n    },\r\n    healthInfo: {\r\n      bloodGroup: 'B+',\r\n      allergies: ['Dairy'],\r\n      medicalConditions: [],\r\n      medications: [],\r\n    },\r\n    membershipInfo: {\r\n      type: MEMBERSHIP_TYPES.BASIC,\r\n      startDate: '2024-09-01',\r\n      endDate: '2024-12-01',\r\n      status: MEMBER_STATUS.ACTIVE,\r\n    },\r\n    trainerId: 'TR001',\r\n    joinDate: '2024-09-01',\r\n    profileImage: null,\r\n    bodyMeasurements: [\r\n      {\r\n        date: '2024-09-01',\r\n        weight: 80.1,\r\n        height: 180,\r\n        bodyFat: 18.5,\r\n        muscleMass: 52.3,\r\n        measurements: {\r\n          chest: 108,\r\n          waist: 85,\r\n          hips: 98,\r\n          biceps: 38,\r\n          thighs: 62,\r\n        },\r\n      },\r\n    ],\r\n    notes: 'New member, beginner level fitness goals.',\r\n  },\r\n];\r\n\r\nexport const MEMBER_TABLE_COLUMNS = [\r\n  { field: 'id', headerName: 'Member ID', width: 120 },\r\n  { field: 'name', headerName: 'Full Name', width: 180 },\r\n  { field: 'email', headerName: 'Email', width: 200 },\r\n  { field: 'phone', headerName: 'Phone', width: 150 },\r\n  { field: 'membershipType', headerName: 'Membership', width: 130 },\r\n  { field: 'status', headerName: 'Status', width: 120 },\r\n  { field: 'joinDate', headerName: 'Join Date', width: 130 },\r\n  { field: 'actions', headerName: 'Actions', width: 120 },\r\n];\r\n\r\nexport const BODY_MEASUREMENT_FIELDS = [\r\n  { key: 'weight', label: 'Weight (kg)', type: 'number' },\r\n  { key: 'height', label: 'Height (cm)', type: 'number' },\r\n  { key: 'bodyFat', label: 'Body Fat (%)', type: 'number' },\r\n  { key: 'muscleMass', label: 'Muscle Mass (kg)', type: 'number' },\r\n  { key: 'chest', label: 'Chest (cm)', type: 'number' },\r\n  { key: 'waist', label: 'Waist (cm)', type: 'number' },\r\n  { key: 'hips', label: 'Hips (cm)', type: 'number' },\r\n  { key: 'biceps', label: 'Biceps (cm)', type: 'number' },\r\n  { key: 'thighs', label: 'Thighs (cm)', type: 'number' },\r\n];\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2M9 8c1.65 0 3 1.35 3 3s-1.35 3-3 3-3-1.35-3-3 1.35-3 3-3M2.08 19c1.38-2.39 3.96-4 6.92-4s5.54 1.61 6.92 4zm18.89-9.15-.75 1.3-1.47-.85V12h-1.5v-1.7l-1.47.85-.75-1.3L16.5 9l-1.47-.85.75-1.3 1.47.85V6h1.5v1.7l1.47-.85.75 1.3L19.5 9z\"\n}), 'ContactEmergency');","// Member Management utility functions\r\n\r\nimport { MEMBER_STATUS, MEMBERSHIP_TYPES } from './member.constants';\r\n\r\n/**\r\n * Get member status color for UI display\r\n */\r\nexport const getMemberStatusColor = (status) => {\r\n  switch (status) {\r\n    case MEMBER_STATUS.ACTIVE:\r\n      return 'success';\r\n    case MEMBER_STATUS.INACTIVE:\r\n      return 'warning';\r\n    case MEMBER_STATUS.SUSPENDED:\r\n      return 'error';\r\n    case MEMBER_STATUS.EXPIRED:\r\n      return 'error';\r\n    default:\r\n      return 'default';\r\n  }\r\n};\r\n\r\n/**\r\n * Get membership type color for UI display\r\n */\r\nexport const getMembershipTypeColor = (type) => {\r\n  switch (type) {\r\n    case MEMBERSHIP_TYPES.BASIC:\r\n      return 'primary';\r\n    case MEMBERSHIP_TYPES.PREMIUM:\r\n      return 'warning';\r\n    case MEMBERSHIP_TYPES.VIP:\r\n      return 'error';\r\n    case MEMBERSHIP_TYPES.LIFETIME:\r\n      return 'success';\r\n    default:\r\n      return 'default';\r\n  }\r\n};\r\n\r\n/**\r\n * Calculate age from date of birth\r\n */\r\nexport const calculateAge = (dateOfBirth) => {\r\n  const today = new Date();\r\n  const birthDate = new Date(dateOfBirth);\r\n  let age = today.getFullYear() - birthDate.getFullYear();\r\n  const monthDiff = today.getMonth() - birthDate.getMonth();\r\n\r\n  if (\r\n    monthDiff < 0 ||\r\n    (monthDiff === 0 && today.getDate() < birthDate.getDate())\r\n  ) {\r\n    age--;\r\n  }\r\n\r\n  return age;\r\n};\r\n\r\n/**\r\n * Calculate BMI from weight and height\r\n */\r\nexport const calculateBMI = (weight, height) => {\r\n  const heightInMeters = height / 100;\r\n  return (weight / (heightInMeters * heightInMeters)).toFixed(1);\r\n};\r\n\r\n/**\r\n * Get BMI category\r\n */\r\nexport const getBMICategory = (bmi) => {\r\n  if (bmi < 18.5) return 'Underweight';\r\n  if (bmi < 25) return 'Normal';\r\n  if (bmi < 30) return 'Overweight';\r\n  return 'Obese';\r\n};\r\n\r\n/**\r\n * Check if membership is expiring soon (within 30 days)\r\n */\r\nexport const isMembershipExpiringSoon = (endDate) => {\r\n  const today = new Date();\r\n  const expiryDate = new Date(endDate);\r\n  const diffTime = expiryDate - today;\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  return diffDays <= 30 && diffDays > 0;\r\n};\r\n\r\n/**\r\n * Format member data for table display\r\n */\r\nexport const formatMemberForTable = (member) => ({\r\n  id: member.id,\r\n  name: `${member.firstName} ${member.lastName}`,\r\n  email: member.email,\r\n  phone: member.phone,\r\n  membershipType: member.membershipInfo.type.toUpperCase(),\r\n  status: member.membershipInfo.status.toUpperCase(),\r\n  joinDate: new Date(member.joinDate).toLocaleDateString(),\r\n});\r\n\r\n/**\r\n * Get latest body measurements\r\n */\r\nexport const getLatestMeasurements = (member) => {\r\n  if (!member.bodyMeasurements || member.bodyMeasurements.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return member.bodyMeasurements.reduce((latest, current) => {\r\n    return new Date(current.date) > new Date(latest.date) ? current : latest;\r\n  });\r\n};\r\n\r\n/**\r\n * Calculate progress between two measurements\r\n */\r\nexport const calculateProgress = (latest, previous) => {\r\n  if (!latest || !previous) return null;\r\n\r\n  return {\r\n    weight: {\r\n      change: (latest.weight - previous.weight).toFixed(1),\r\n      percentage: (\r\n        ((latest.weight - previous.weight) / previous.weight) *\r\n        100\r\n      ).toFixed(1),\r\n    },\r\n    bodyFat: {\r\n      change: (latest.bodyFat - previous.bodyFat).toFixed(1),\r\n      percentage: (\r\n        ((latest.bodyFat - previous.bodyFat) / previous.bodyFat) *\r\n        100\r\n      ).toFixed(1),\r\n    },\r\n    muscleMass: {\r\n      change: (latest.muscleMass - previous.muscleMass).toFixed(1),\r\n      percentage: (\r\n        ((latest.muscleMass - previous.muscleMass) / previous.muscleMass) *\r\n        100\r\n      ).toFixed(1),\r\n    },\r\n  };\r\n};\r\n\r\n/**\r\n * Validate member form data\r\n */\r\nexport const validateMemberForm = (memberData) => {\r\n  const errors = {};\r\n\r\n  if (!memberData.firstName?.trim()) {\r\n    errors.firstName = 'First name is required';\r\n  }\r\n\r\n  if (!memberData.lastName?.trim()) {\r\n    errors.lastName = 'Last name is required';\r\n  }\r\n\r\n  if (!memberData.email?.trim()) {\r\n    errors.email = 'Email is required';\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(memberData.email)) {\r\n    errors.email = 'Email is invalid';\r\n  }\r\n\r\n  if (!memberData.phone?.trim()) {\r\n    errors.phone = 'Phone number is required';\r\n  }\r\n\r\n  if (!memberData.dateOfBirth) {\r\n    errors.dateOfBirth = 'Date of birth is required';\r\n  }\r\n\r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors,\r\n  };\r\n};\r\n\r\n/**\r\n * Filter members based on search criteria\r\n */\r\nexport const filterMembers = (\r\n  members,\r\n  searchTerm,\r\n  statusFilter,\r\n  membershipFilter\r\n) => {\r\n  return members.filter((member) => {\r\n    const matchesSearch =\r\n      searchTerm === '' ||\r\n      `${member.firstName} ${member.lastName}`\r\n        .toLowerCase()\r\n        .includes(searchTerm.toLowerCase()) ||\r\n      member.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      member.id.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    const matchesStatus =\r\n      statusFilter === 'all' || member.membershipInfo.status === statusFilter;\r\n\r\n    const matchesMembership =\r\n      membershipFilter === 'all' ||\r\n      member.membershipInfo.type === membershipFilter;\r\n\r\n    return matchesSearch && matchesStatus && matchesMembership;\r\n  });\r\n};\r\n"],"names":["createSvgIcon","_jsx","d","_ref","_member$name$split$","_member$membershipInf","_member$membershipInf2","_member$address","_member$emergencyCont","_member$emergencyCont2","_member$emergencyCont3","_member$emergencyCont4","_member$healthInfo","_member$healthInfo2","_member$healthInfo2$a","_member$healthInfo3","_member$healthInfo3$m","_member$healthInfo4","_member$healthInfo4$m","_member$membershipInf3","_member$membershipInf4","_member$membershipInf5","_member$membershipInf6","member","onEdit","onClose","isOwnProfile","activeTab","setActiveTab","useState","age","calculateAge","dateOfBirth","latestMeasurements","getLatestMeasurements","bmi","calculateBMI","weight","height","TabPanel","_ref2","children","value","index","hidden","Box","sx","pt","_jsxs","Card","maxWidth","mx","CardHeader","avatar","Avatar","width","fontSize","firstName","name","lastName","split","title","Typography","variant","concat","subheader","mt","Chip","label","membershipInfo","status","toUpperCase","color","size","mr","type","membershipType","action","Button","onClick","CardContent","Tabs","onChange","handleTabChange","event","newValue","borderBottom","borderColor","Tab","Grid","container","spacing","xs","md","display","alignItems","mb","Person","Email","email","Phone","phone","Cake","Home","address","street","_Fragment","city","state","zipCode","ContactEmergency","emergencyContact","relation","relationship","notes","LocalHospital","healthInfo","bloodGroup","gutterBottom","allergies","length","map","allergy","medicalConditions","condition","medications","medication","getBMICategory","ml","bodyFat","muscleMass","flexDirection","gap","justifyContent","measurements","chest","waist","hips","biceps","thighs","Date","date","toLocaleDateString","textAlign","py","FitnessCenter","startDate","joinDate","endDate","MEMBER_STATUS","ACTIVE","INACTIVE","SUSPENDED","EXPIRED","MEMBERSHIP_TYPES","BASIC","PREMIUM","VIP","LIFETIME","BLOOD_GROUPS","EMERGENCY_RELATIONS","MOCK_MEMBERS","id","gender","trainerId","profileImage","bodyMeasurements","MEMBER_TABLE_COLUMNS","field","headerName","BODY_MEASUREMENT_FIELDS","key","getMemberStatusColor","getMembershipTypeColor","today","birthDate","getFullYear","monthDiff","getMonth","getDate","heightInMeters","toFixed","isMembershipExpiringSoon","diffTime","diffDays","Math","ceil","formatMemberForTable","reduce","latest","current","calculateProgress","previous","change","percentage","validateMemberForm","memberData","_memberData$firstName","_memberData$lastName","_memberData$email","_memberData$phone","errors","trim","test","isValid","Object","keys","filterMembers","members","searchTerm","statusFilter","membershipFilter","filter","matchesSearch","toLowerCase","includes","matchesStatus","matchesMembership"],"sourceRoot":""}