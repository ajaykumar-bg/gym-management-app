{"version":3,"file":"static/js/85.e160aac2.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/esm/CardHeader/CardHeader.js","features/MyProfile/MyProfile.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography, { typographyClasses } from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from \"./cardHeaderClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${cardHeaderClasses.title}`]: styles.title\n    }, {\n      [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n    }, styles.root];\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar'\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action'\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content'\n})({\n  flex: '1 1 auto',\n  [`.${typographyClasses.root}:where(& .${cardHeaderClasses.title})`]: {\n    display: 'block'\n  },\n  [`.${typographyClasses.root}:where(& .${cardHeaderClasses.subheader})`]: {\n    display: 'block'\n  }\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n    action,\n    avatar,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableTypography\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      title: titleTypographyProps,\n      subheader: subheaderTypographyProps,\n      ...slotProps\n    }\n  };\n  let title = titleProp;\n  const [TitleSlot, titleSlotProps] = useSlot('title', {\n    className: classes.title,\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      variant: avatar ? 'body2' : 'h5',\n      component: 'span'\n    }\n  });\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(TitleSlot, {\n      ...titleSlotProps,\n      children: title\n    });\n  }\n  let subheader = subheaderProp;\n  const [SubheaderSlot, subheaderSlotProps] = useSlot('subheader', {\n    className: classes.subheader,\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      variant: avatar ? 'body2' : 'body1',\n      color: 'textSecondary',\n      component: 'span'\n    }\n  });\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(SubheaderSlot, {\n      ...subheaderSlotProps,\n      children: subheader\n    });\n  }\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CardHeaderRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other,\n      component\n    },\n    ownerState\n  });\n  const [AvatarSlot, avatarSlotProps] = useSlot('avatar', {\n    className: classes.avatar,\n    elementType: CardHeaderAvatar,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ContentSlot, contentSlotProps] = useSlot('content', {\n    className: classes.content,\n    elementType: CardHeaderContent,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ActionSlot, actionSlotProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CardHeaderAction,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [avatar && /*#__PURE__*/_jsx(AvatarSlot, {\n      ...avatarSlotProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(ContentSlot, {\n      ...contentSlotProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: action\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    avatar: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    subheader: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    title: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    avatar: PropTypes.elementType,\n    content: PropTypes.elementType,\n    root: PropTypes.elementType,\n    subheader: PropTypes.elementType,\n    title: PropTypes.elementType\n  }),\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   * @deprecated Use `slotProps.subheader` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   * @deprecated Use `slotProps.title` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import React from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { useUser } from '../../context/UserContext';\r\nimport MemberProfile from '../MemberManagement/components/MemberProfile';\r\nimport { MOCK_MEMBERS } from '../MemberManagement/member.constants';\r\n\r\nconst MyProfile = () => {\r\n  const { user } = useUser();\r\n\r\n  // Find the current user's member profile\r\n  // In a real app, this would come from an API call\r\n  const memberProfile = MOCK_MEMBERS.find(\r\n    (member) => member.email === user.email\r\n  ) || {\r\n    id: user.id,\r\n    firstName: user.name.split(' ')[0] || user.name,\r\n    lastName: user.name.split(' ')[1] || '',\r\n    name: user.name,\r\n    email: user.email,\r\n    phone: '+1 (555) 123-4567',\r\n    dateOfBirth: '1990-01-01',\r\n    address: '123 Main St, City, ST 12345',\r\n    membershipType: 'basic',\r\n    status: 'active',\r\n    joinDate: '2024-01-01',\r\n    emergencyContact: {\r\n      name: 'Emergency Contact',\r\n      phone: '+1 (555) 987-6543',\r\n      relationship: 'Family',\r\n    },\r\n    physicalInfo: {\r\n      height: 175,\r\n      weight: 70,\r\n    },\r\n    healthInfo: {\r\n      bloodGroup: 'Not specified',\r\n      allergies: [],\r\n      medicalConditions: [],\r\n      medications: [],\r\n    },\r\n    fitnessGoals: 'General fitness and wellness',\r\n    medicalConditions: 'None',\r\n    preferredWorkoutTime: 'morning',\r\n    hasPersonalTrainer: false,\r\n    lastVisit: new Date().toISOString().split('T')[0],\r\n    totalVisits: 45,\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant='h4' component='h1' gutterBottom>\r\n        My Profile\r\n      </Typography>\r\n\r\n      <MemberProfile\r\n        member={memberProfile}\r\n        onBack={null} // Hide back button for member's own profile\r\n        onEdit={null} // Members cannot edit their own profile through this view\r\n        onDelete={null} // Members cannot delete their own profile\r\n        isOwnProfile={true}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n"],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","styled","name","overridesResolver","props","styles","concat","cardHeaderClasses","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","typographyClasses","React","inProps","ref","useDefaultProps","action","avatar","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","slots","slotProps","other","_objectWithoutProperties","ownerState","_objectSpread","classes","composeClasses","content","useUtilityClasses","externalForwardedProps","TitleSlot","titleSlotProps","useSlot","className","elementType","Typography","additionalProps","variant","type","_jsx","children","SubheaderSlot","subheaderSlotProps","color","RootSlot","rootSlotProps","AvatarSlot","avatarSlotProps","ContentSlot","contentSlotProps","ActionSlot","actionSlotProps","_jsxs","MyProfile","user","useUser","memberProfile","MOCK_MEMBERS","find","member","email","id","firstName","split","lastName","phone","dateOfBirth","address","membershipType","status","joinDate","emergencyContact","relationship","physicalInfo","height","weight","healthInfo","bloodGroup","allergies","medicalConditions","medications","fitnessGoals","preferredWorkoutTime","hasPersonalTrainer","lastVisit","Date","toISOString","totalVisits","Box","sx","p","gutterBottom","MemberProfile","onBack","onEdit","onDelete","isOwnProfile"],"sourceRoot":""}