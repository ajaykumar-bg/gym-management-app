{"version":3,"file":"static/js/480.9800ce5a.chunk.js","mappings":"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","sources":["features/Dashboard/constants.js","features/Dashboard/dashboard.utils.js","features/Dashboard/components/StatCard.jsx","features/Dashboard/components/RecentActivity.jsx","features/Dashboard/components/QuickActions.jsx","features/Dashboard/components/MembershipGrowthChart.jsx","features/Dashboard/components/RevenueChart.jsx","features/Dashboard/components/ClassAttendanceChart.jsx","features/Dashboard/components/WorkoutChart.jsx","features/Dashboard/components/TrainerScheduleChart.jsx","features/Dashboard/Dashboard.jsx"],"sourcesContent":["// Dashboard constants for gym management application\r\n\r\nexport const DASHBOARD_STATS = {\r\n  admin: [\r\n    {\r\n      id: 'totalMembers',\r\n      title: 'Total Members',\r\n      value: 1247,\r\n      change: '+12%',\r\n      changeType: 'positive',\r\n      icon: 'People',\r\n      color: 'primary',\r\n    },\r\n    {\r\n      id: 'activeTrainers',\r\n      title: 'Active Trainers',\r\n      value: 18,\r\n      change: '+2',\r\n      changeType: 'positive',\r\n      icon: 'FitnessCenter',\r\n      color: 'warning',\r\n    },\r\n    {\r\n      id: 'monthlyRevenue',\r\n      title: 'Monthly Revenue',\r\n      value: '$45,320',\r\n      change: '+8.5%',\r\n      changeType: 'positive',\r\n      icon: 'AttachMoney',\r\n      color: 'success',\r\n    },\r\n    {\r\n      id: 'equipmentStatus',\r\n      title: 'Equipment Issues',\r\n      value: 3,\r\n      change: '-2',\r\n      changeType: 'positive',\r\n      icon: 'Build',\r\n      color: 'error',\r\n    },\r\n  ],\r\n  trainer: [\r\n    {\r\n      id: 'myMembers',\r\n      title: 'My Members',\r\n      value: 45,\r\n      change: '+3',\r\n      changeType: 'positive',\r\n      icon: 'People',\r\n      color: 'primary',\r\n    },\r\n    {\r\n      id: 'todayClasses',\r\n      title: \"Today's Classes\",\r\n      value: 6,\r\n      change: '2 upcoming',\r\n      changeType: 'info',\r\n      icon: 'Schedule',\r\n      color: 'warning',\r\n    },\r\n    {\r\n      id: 'weeklyHours',\r\n      title: 'Weekly Hours',\r\n      value: 32,\r\n      change: '+4h',\r\n      changeType: 'positive',\r\n      icon: 'Timer',\r\n      color: 'success',\r\n    },\r\n    {\r\n      id: 'memberProgress',\r\n      title: 'Member Progress',\r\n      value: '87%',\r\n      change: '+5%',\r\n      changeType: 'positive',\r\n      icon: 'TrendingUp',\r\n      color: 'info',\r\n    },\r\n  ],\r\n  member: [\r\n    {\r\n      id: 'workoutsThisMonth',\r\n      title: 'Workouts This Month',\r\n      value: 16,\r\n      change: '+4',\r\n      changeType: 'positive',\r\n      icon: 'FitnessCenter',\r\n      color: 'primary',\r\n    },\r\n    {\r\n      id: 'caloriesBurned',\r\n      title: 'Calories Burned',\r\n      value: '8,240',\r\n      change: '+320',\r\n      changeType: 'positive',\r\n      icon: 'LocalFireDepartment',\r\n      color: 'error',\r\n    },\r\n    {\r\n      id: 'membershipDays',\r\n      title: 'Membership Days Left',\r\n      value: 47,\r\n      change: 'Expires soon',\r\n      changeType: 'warning',\r\n      icon: 'CardMembership',\r\n      color: 'warning',\r\n    },\r\n    {\r\n      id: 'nextClass',\r\n      title: 'Next Class',\r\n      value: 'HIIT',\r\n      change: 'Today 6:00 PM',\r\n      changeType: 'info',\r\n      icon: 'Schedule',\r\n      color: 'success',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const CHART_DATA = {\r\n  membershipGrowth: {\r\n    data: [\r\n      { month: 'Jan', members: 980, newMembers: 45 },\r\n      { month: 'Feb', members: 1020, newMembers: 52 },\r\n      { month: 'Mar', members: 1095, newMembers: 89 },\r\n      { month: 'Apr', members: 1156, newMembers: 67 },\r\n      { month: 'May', members: 1203, newMembers: 58 },\r\n      { month: 'Jun', members: 1247, newMembers: 71 },\r\n    ],\r\n  },\r\n  revenueByMonth: {\r\n    data: [38500, 42000, 39800, 44200, 47300, 45320],\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n  },\r\n  classAttendance: {\r\n    data: [\r\n      { class: 'HIIT', attendance: 85 },\r\n      { class: 'Yoga', attendance: 92 },\r\n      { class: 'CrossFit', attendance: 78 },\r\n      { class: 'Pilates', attendance: 88 },\r\n      { class: 'Spinning', attendance: 95 },\r\n    ],\r\n  },\r\n  memberWorkouts: {\r\n    data: [\r\n      { day: 'Mon', workouts: 4 },\r\n      { day: 'Tue', workouts: 6 },\r\n      { day: 'Wed', workouts: 3 },\r\n      { day: 'Thu', workouts: 5 },\r\n      { day: 'Fri', workouts: 7 },\r\n      { day: 'Sat', workouts: 8 },\r\n      { day: 'Sun', workouts: 2 },\r\n    ],\r\n  },\r\n  trainerSchedule: {\r\n    data: [\r\n      { time: '6:00', classes: 2 },\r\n      { time: '8:00', classes: 3 },\r\n      { time: '10:00', classes: 4 },\r\n      { time: '12:00', classes: 2 },\r\n      { time: '14:00', classes: 3 },\r\n      { time: '16:00', classes: 5 },\r\n      { time: '18:00', classes: 6 },\r\n      { time: '20:00', classes: 4 },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const RECENT_ACTIVITIES = {\r\n  admin: [\r\n    {\r\n      id: 1,\r\n      type: 'member',\r\n      message: 'New member Sarah Johnson joined',\r\n      time: '2 hours ago',\r\n      avatar: 'SJ',\r\n      color: 'primary',\r\n    },\r\n    {\r\n      id: 2,\r\n      type: 'payment',\r\n      message: 'Monthly payment received from John Doe',\r\n      time: '4 hours ago',\r\n      avatar: 'JD',\r\n      color: 'success',\r\n    },\r\n    {\r\n      id: 3,\r\n      type: 'equipment',\r\n      message: 'Treadmill #3 maintenance completed',\r\n      time: '1 day ago',\r\n      avatar: 'T3',\r\n      color: 'warning',\r\n    },\r\n    {\r\n      id: 4,\r\n      type: 'trainer',\r\n      message: 'New trainer Mike Wilson onboarded',\r\n      time: '2 days ago',\r\n      avatar: 'MW',\r\n      color: 'info',\r\n    },\r\n  ],\r\n  trainer: [\r\n    {\r\n      id: 1,\r\n      type: 'class',\r\n      message: 'HIIT class completed - 12 attendees',\r\n      time: '1 hour ago',\r\n      avatar: 'H',\r\n      color: 'success',\r\n    },\r\n    {\r\n      id: 2,\r\n      type: 'member',\r\n      message: 'New member assigned: Emma Davis',\r\n      time: '3 hours ago',\r\n      avatar: 'ED',\r\n      color: 'primary',\r\n    },\r\n    {\r\n      id: 3,\r\n      type: 'progress',\r\n      message: 'Tom Smith achieved weight loss goal',\r\n      time: '1 day ago',\r\n      avatar: 'TS',\r\n      color: 'success',\r\n    },\r\n    {\r\n      id: 4,\r\n      type: 'schedule',\r\n      message: 'Yoga class rescheduled for tomorrow',\r\n      time: '2 days ago',\r\n      avatar: 'Y',\r\n      color: 'warning',\r\n    },\r\n  ],\r\n  member: [\r\n    {\r\n      id: 1,\r\n      type: 'workout',\r\n      message: 'Completed 45-min cardio session',\r\n      time: '3 hours ago',\r\n      avatar: 'C',\r\n      color: 'success',\r\n    },\r\n    {\r\n      id: 2,\r\n      type: 'class',\r\n      message: 'Booked HIIT class for tomorrow',\r\n      time: '1 day ago',\r\n      avatar: 'H',\r\n      color: 'primary',\r\n    },\r\n    {\r\n      id: 3,\r\n      type: 'achievement',\r\n      message: 'Reached 10 workout milestone!',\r\n      time: '2 days ago',\r\n      avatar: '🏆',\r\n      color: 'warning',\r\n    },\r\n    {\r\n      id: 4,\r\n      type: 'measurement',\r\n      message: 'Updated body measurements',\r\n      time: '3 days ago',\r\n      avatar: 'M',\r\n      color: 'info',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const QUICK_ACTIONS = {\r\n  admin: [\r\n    { label: 'Add New Member', icon: 'PersonAdd', path: '/members/add' },\r\n    { label: 'View Reports', icon: 'Assessment', path: '/reports' },\r\n    { label: 'Manage Equipment', icon: 'Build', path: '/equipment' },\r\n    { label: 'Financial Overview', icon: 'AttachMoney', path: '/finance' },\r\n  ],\r\n  trainer: [\r\n    { label: 'Schedule Class', icon: 'Event', path: '/classes/schedule' },\r\n    { label: 'View My Members', icon: 'People', path: '/my-members' },\r\n    { label: 'Member Progress', icon: 'TrendingUp', path: '/progress' },\r\n    { label: 'Equipment Check', icon: 'FitnessCenter', path: '/equipment' },\r\n  ],\r\n  member: [\r\n    { label: 'Book a Class', icon: 'Event', path: '/classes' },\r\n    { label: 'Track Workout', icon: 'FitnessCenter', path: '/workouts' },\r\n    { label: 'View Progress', icon: 'TrendingUp', path: '/progress' },\r\n    { label: 'Update Profile', icon: 'Person', path: '/profile' },\r\n  ],\r\n};\r\n","/**\r\n * Dashboard utility functions for gym management\r\n */\r\n\r\n// Format currency values\r\nexport const formatCurrency = (value) => {\r\n  if (typeof value === 'string' && value.includes('$')) {\r\n    return value;\r\n  }\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(value);\r\n};\r\n\r\n// Format numbers with commas\r\nexport const formatNumber = (value) => {\r\n  if (typeof value === 'string') return value;\r\n  return new Intl.NumberFormat().format(value);\r\n};\r\n\r\n// Get change indicator color\r\nexport const getChangeColor = (changeType) => {\r\n  switch (changeType) {\r\n    case 'positive':\r\n      return 'success.main';\r\n    case 'negative':\r\n      return 'error.main';\r\n    case 'warning':\r\n      return 'warning.main';\r\n    case 'info':\r\n      return 'info.main';\r\n    default:\r\n      return 'text.secondary';\r\n  }\r\n};\r\n\r\n// Get change arrow icon\r\nexport const getChangeIcon = (changeType) => {\r\n  switch (changeType) {\r\n    case 'positive':\r\n      return 'TrendingUp';\r\n    case 'negative':\r\n      return 'TrendingDown';\r\n    case 'warning':\r\n      return 'Warning';\r\n    case 'info':\r\n      return 'Info';\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\n// Generate greeting based on time of day\r\nexport const getGreeting = () => {\r\n  const hour = new Date().getHours();\r\n  if (hour < 12) return 'Good Morning';\r\n  if (hour < 17) return 'Good Afternoon';\r\n  return 'Good Evening';\r\n};\r\n\r\n// Get role-specific dashboard title\r\nexport const getDashboardTitle = (role, userName) => {\r\n  const greeting = getGreeting();\r\n  return `${greeting}, ${userName}!`;\r\n};\r\n\r\n// Calculate percentage change\r\nexport const calculatePercentageChange = (current, previous) => {\r\n  if (previous === 0) return 0;\r\n  return Math.round(((current - previous) / previous) * 100);\r\n};\r\n\r\n// Get activity icon based on type\r\nexport const getActivityIcon = (type) => {\r\n  const iconMap = {\r\n    member: 'Person',\r\n    payment: 'AttachMoney',\r\n    equipment: 'Build',\r\n    trainer: 'FitnessCenter',\r\n    class: 'Event',\r\n    progress: 'TrendingUp',\r\n    schedule: 'Schedule',\r\n    workout: 'FitnessCenter',\r\n    achievement: 'EmojiEvents',\r\n    measurement: 'Straighten',\r\n  };\r\n  return iconMap[type] || 'Info';\r\n};\r\n\r\n// Format time ago\r\nexport const formatTimeAgo = (timeString) => {\r\n  // This is a simple implementation - in a real app you might use a library like date-fns\r\n  return timeString;\r\n};\r\n\r\n// Get chart colors based on theme\r\nexport const getChartColors = (theme = 'light') => {\r\n  return {\r\n    primary: '#1976d2',\r\n    secondary: '#dc004e',\r\n    success: '#2e7d32',\r\n    warning: '#ed6c02',\r\n    error: '#d32f2f',\r\n    info: '#0288d1',\r\n  };\r\n};\r\n\r\n// Validate stat value\r\nexport const validateStatValue = (value) => {\r\n  if (value === null || value === undefined) return '0';\r\n  return value;\r\n};\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Box, Avatar } from '@mui/material';\r\nimport {\r\n  People,\r\n  FitnessCenter,\r\n  AttachMoney,\r\n  Build,\r\n  Schedule,\r\n  Timer,\r\n  TrendingUp,\r\n  LocalFireDepartment,\r\n  CardMembership,\r\n  TrendingDown,\r\n  Warning,\r\n  Info,\r\n} from '@mui/icons-material';\r\nimport {\r\n  getChangeColor,\r\n  formatNumber,\r\n  formatCurrency,\r\n} from '../dashboard.utils';\r\n\r\n// Icon mapping\r\nconst iconMap = {\r\n  People,\r\n  FitnessCenter,\r\n  AttachMoney,\r\n  Build,\r\n  Schedule,\r\n  Timer,\r\n  TrendingUp,\r\n  LocalFireDepartment,\r\n  CardMembership,\r\n  TrendingDown,\r\n  Warning,\r\n  Info,\r\n};\r\n\r\nconst StatCard = ({ stat }) => {\r\n  const IconComponent = iconMap[stat.icon] || Info;\r\n  const changeColor = getChangeColor(stat.changeType);\r\n\r\n  // Format the value based on its type\r\n  const formatValue = (value) => {\r\n    if (typeof value === 'string' && value.includes('$')) {\r\n      return value;\r\n    }\r\n    if (typeof value === 'string' && !value.includes('%')) {\r\n      return value;\r\n    }\r\n    if (typeof value === 'number' && stat.id === 'monthlyRevenue') {\r\n      return formatCurrency(value);\r\n    }\r\n    return formatNumber(value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        height: '100%',\r\n        transition: 'all 0.3s ease-in-out',\r\n        '&:hover': {\r\n          transform: 'translateY(-2px)',\r\n          boxShadow: 4,\r\n        },\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Box display='flex' alignItems='center' justifyContent='space-between'>\r\n          <Box>\r\n            <Typography color='textSecondary' gutterBottom variant='body2'>\r\n              {stat.title}\r\n            </Typography>\r\n            <Typography variant='h4' component='div' fontWeight='bold'>\r\n              {formatValue(stat.value)}\r\n            </Typography>\r\n            <Box display='flex' alignItems='center' mt={1}>\r\n              <Typography\r\n                variant='body2'\r\n                sx={{\r\n                  color: changeColor,\r\n                  fontWeight: 'medium',\r\n                }}\r\n              >\r\n                {stat.change}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Avatar\r\n            sx={{\r\n              bgcolor: `${stat.color}.main`,\r\n              width: 60,\r\n              height: 60,\r\n            }}\r\n          >\r\n            <IconComponent fontSize='large' />\r\n          </Avatar>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StatCard;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Typography,\r\n  Chip,\r\n  Box,\r\n} from '@mui/material';\r\nimport { formatTimeAgo } from '../dashboard.utils';\r\n\r\nconst RecentActivity = ({ activities, title = 'Recent Activities' }) => {\r\n  const getAvatarColor = (color) => {\r\n    switch (color) {\r\n      case 'primary':\r\n        return 'primary.main';\r\n      case 'success':\r\n        return 'success.main';\r\n      case 'warning':\r\n        return 'warning.main';\r\n      case 'info':\r\n        return 'info.main';\r\n      case 'error':\r\n        return 'error.main';\r\n      default:\r\n        return 'grey.500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ height: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant='h6' component='div'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <List disablePadding>\r\n          {activities.map((activity, index) => (\r\n            <ListItem\r\n              key={activity.id}\r\n              alignItems='flex-start'\r\n              sx={{\r\n                px: 0,\r\n                py: 1.5,\r\n                borderBottom:\r\n                  index < activities.length - 1 ? '1px solid' : 'none',\r\n                borderColor: 'divider',\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    bgcolor: getAvatarColor(activity.color),\r\n                    width: 40,\r\n                    height: 40,\r\n                    fontSize: '0.875rem',\r\n                  }}\r\n                >\r\n                  {activity.avatar}\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant='body2' sx={{ fontWeight: 'medium' }}>\r\n                    {activity.message}\r\n                  </Typography>\r\n                }\r\n                secondary={\r\n                  <Box\r\n                    display='flex'\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                    mt={0.5}\r\n                  >\r\n                    <Typography variant='caption' color='textSecondary'>\r\n                      {formatTimeAgo(activity.time)}\r\n                    </Typography>\r\n                    <Chip\r\n                      label={activity.type}\r\n                      size='small'\r\n                      variant='outlined'\r\n                      sx={{\r\n                        height: 20,\r\n                        fontSize: '0.7rem',\r\n                        textTransform: 'capitalize',\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RecentActivity;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n} from '@mui/material';\r\nimport {\r\n  PersonAdd,\r\n  Assessment,\r\n  Build,\r\n  AttachMoney,\r\n  Event,\r\n  People,\r\n  TrendingUp,\r\n  FitnessCenter,\r\n  Person,\r\n} from '@mui/icons-material';\r\n\r\n// Icon mapping\r\nconst iconMap = {\r\n  PersonAdd,\r\n  Assessment,\r\n  Build,\r\n  AttachMoney,\r\n  Event,\r\n  People,\r\n  TrendingUp,\r\n  FitnessCenter,\r\n  Person,\r\n};\r\n\r\nconst QuickActions = ({ actions, title = 'Quick Actions' }) => {\r\n  const handleActionClick = (path) => {\r\n    // In a real app, you would use React Router here\r\n    console.log(`Navigate to: ${path}`);\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ height: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant='h6' component='div'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          {actions.map((action, index) => {\r\n            const IconComponent = iconMap[action.icon] || Event;\r\n            return (\r\n              <Grid key={index} size={{ xs: 12, sm: 6 }}>\r\n                <Button\r\n                  variant='outlined'\r\n                  fullWidth\r\n                  startIcon={<IconComponent />}\r\n                  onClick={() => handleActionClick(action.path)}\r\n                  sx={{\r\n                    py: 1.5,\r\n                    textAlign: 'left',\r\n                    justifyContent: 'flex-start',\r\n                    '&:hover': {\r\n                      backgroundColor: 'primary.lighter',\r\n                      borderColor: 'primary.main',\r\n                    },\r\n                  }}\r\n                >\r\n                  <Typography variant='body2' component='span'>\r\n                    {action.label}\r\n                  </Typography>\r\n                </Button>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuickActions;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { LineChart } from '@mui/x-charts/LineChart';\r\n\r\nconst MembershipGrowthChart = ({ data, title = 'Membership Growth' }) => {\r\n  const theme = useTheme();\r\n\r\n  const xAxisData = data.map((item) => item.month);\r\n  const totalMembersData = data.map((item) => item.members);\r\n  const newMembersData = data.map((item) => item.newMembers);\r\n\r\n  return (\r\n    <Card sx={{ height: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant='h6' component='div'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          series={[\r\n            {\r\n              data: totalMembersData,\r\n              label: 'Total Members',\r\n              color: theme.palette.primary.main,\r\n            },\r\n            {\r\n              data: newMembersData,\r\n              label: 'New Members',\r\n              color: theme.palette.secondary.main,\r\n            },\r\n          ]}\r\n          xAxis={[{ scaleType: 'point', data: xAxisData }]}\r\n          sx={{\r\n            '& .MuiLineElement-root': {\r\n              strokeWidth: 2,\r\n            },\r\n          }}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MembershipGrowthChart;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { BarChart } from '@mui/x-charts/BarChart';\r\n\r\nconst RevenueChart = ({ data, title = 'Monthly Revenue' }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card sx={{ height: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant='h6' component='div'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          series={[\r\n            {\r\n              data: data.data,\r\n              label: 'Revenue ($)',\r\n              color: theme.palette.success.main,\r\n            },\r\n          ]}\r\n          xAxis={[{ scaleType: 'band', data: data.labels }]}\r\n          yAxis={[\r\n            {\r\n              scaleType: 'linear',\r\n              valueFormatter: (value) => `$${value.toLocaleString()}`,\r\n            },\r\n          ]}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RevenueChart;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { PieChart } from '@mui/x-charts/PieChart';\r\n\r\nconst ClassAttendanceChart = ({ data, title = 'Class Attendance' }) => {\r\n  const theme = useTheme();\r\n\r\n  const chartData = data.map((item, index) => ({\r\n    id: index,\r\n    value: item.attendance,\r\n    label: item.class,\r\n  }));\r\n\r\n  const colors = [\r\n    theme.palette.primary.main,\r\n    theme.palette.secondary.main,\r\n    theme.palette.success.main,\r\n    theme.palette.warning.main,\r\n    theme.palette.info.main,\r\n  ];\r\n\r\n  return (\r\n    <Card sx={{ height: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant='h6' component='div'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <PieChart\r\n          series={[\r\n            {\r\n              data: chartData,\r\n              highlightScope: { faded: 'global', highlighted: 'item' },\r\n              faded: { innerRadius: 30, additionalRadius: -30, color: 'gray' },\r\n            },\r\n          ]}\r\n          height={300}\r\n          colors={colors}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ClassAttendanceChart;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { BarChart } from '@mui/x-charts/BarChart';\r\n\r\nconst WorkoutChart = ({ data, title = 'Weekly Workouts' }) => {\r\n  const theme = useTheme();\r\n\r\n  const xAxisData = data.map((item) => item.day);\r\n  const workoutData = data.map((item) => item.workouts);\r\n\r\n  return (\r\n    <Card sx={{ height: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant='h6' component='div'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          series={[\r\n            {\r\n              data: workoutData,\r\n              label: 'Workouts',\r\n              color: theme.palette.primary.main,\r\n            },\r\n          ]}\r\n          xAxis={[{ scaleType: 'band', data: xAxisData }]}\r\n          yAxis={[\r\n            {\r\n              scaleType: 'linear',\r\n              min: 0,\r\n              max: Math.max(...workoutData) + 2,\r\n            },\r\n          ]}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WorkoutChart;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { LineChart } from '@mui/x-charts/LineChart';\r\n\r\nconst TrainerScheduleChart = ({ data, title = 'Daily Class Schedule' }) => {\r\n  const theme = useTheme();\r\n\r\n  const xAxisData = data.map((item) => item.time);\r\n  const classData = data.map((item) => item.classes);\r\n\r\n  return (\r\n    <Card sx={{ height: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant='h6' component='div'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          series={[\r\n            {\r\n              data: classData,\r\n              label: 'Number of Classes',\r\n              color: theme.palette.warning.main,\r\n              area: true,\r\n            },\r\n          ]}\r\n          xAxis={[{ scaleType: 'point', data: xAxisData }]}\r\n          yAxis={[\r\n            {\r\n              scaleType: 'linear',\r\n              min: 0,\r\n              max: Math.max(...classData) + 1,\r\n            },\r\n          ]}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TrainerScheduleChart;\r\n","import React from 'react';\r\nimport { Box, Typography, Grid } from '@mui/material';\r\nimport { useUser } from '../../context/UserContext';\r\nimport {\r\n  DASHBOARD_STATS,\r\n  CHART_DATA,\r\n  RECENT_ACTIVITIES,\r\n  QUICK_ACTIONS,\r\n} from './constants';\r\nimport { getDashboardTitle } from './dashboard.utils';\r\n\r\n// Import components\r\nimport StatCard from './components/StatCard';\r\nimport RecentActivity from './components/RecentActivity';\r\nimport QuickActions from './components/QuickActions';\r\nimport MembershipGrowthChart from './components/MembershipGrowthChart';\r\nimport RevenueChart from './components/RevenueChart';\r\nimport ClassAttendanceChart from './components/ClassAttendanceChart';\r\nimport WorkoutChart from './components/WorkoutChart';\r\nimport TrainerScheduleChart from './components/TrainerScheduleChart';\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useUser();\r\n  const userStats = DASHBOARD_STATS[user.role] || [];\r\n  const userActivities = RECENT_ACTIVITIES[user.role] || [];\r\n  const userQuickActions = QUICK_ACTIONS[user.role] || [];\r\n\r\n  const renderRoleSpecificCharts = () => {\r\n    switch (user.role) {\r\n      case 'admin':\r\n        return (\r\n          <>\r\n            <Grid size={{ xs: 12, lg: 8 }}>\r\n              <MembershipGrowthChart data={CHART_DATA.membershipGrowth.data} />\r\n            </Grid>\r\n            <Grid size={{ xs: 12, lg: 4 }}>\r\n              <ClassAttendanceChart data={CHART_DATA.classAttendance.data} />\r\n            </Grid>\r\n            <Grid size={{ xs: 12 }}>\r\n              <RevenueChart data={CHART_DATA.revenueByMonth} />\r\n            </Grid>\r\n          </>\r\n        );\r\n\r\n      case 'trainer':\r\n        return (\r\n          <>\r\n            <Grid size={{ xs: 12, lg: 8 }}>\r\n              <TrainerScheduleChart data={CHART_DATA.trainerSchedule.data} />\r\n            </Grid>\r\n            <Grid size={{ xs: 12, lg: 4 }}>\r\n              <ClassAttendanceChart\r\n                data={CHART_DATA.classAttendance.data}\r\n                title='My Class Attendance'\r\n              />\r\n            </Grid>\r\n          </>\r\n        );\r\n\r\n      case 'member':\r\n        return (\r\n          <>\r\n            <Grid size={{ xs: 12, lg: 8 }}>\r\n              <WorkoutChart data={CHART_DATA.memberWorkouts.data} />\r\n            </Grid>\r\n            <Grid size={{ xs: 12, lg: 4 }}>\r\n              <ClassAttendanceChart\r\n                data={CHART_DATA.classAttendance.data}\r\n                title='Available Classes'\r\n              />\r\n            </Grid>\r\n          </>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      {/* Header */}\r\n      <Typography variant='h4' gutterBottom>\r\n        {getDashboardTitle(user.role, user.name)}\r\n      </Typography>\r\n      <Typography variant='body1' color='text.secondary' sx={{ mb: 4 }}>\r\n        Welcome to your {user.role} dashboard. Here's your overview.\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Stats Cards */}\r\n        {userStats.map((stat) => (\r\n          <Grid key={stat.id} size={{ xs: 12, sm: 6, lg: 3 }}>\r\n            <StatCard stat={stat} />\r\n          </Grid>\r\n        ))}\r\n\r\n        {/* Charts Section */}\r\n        {renderRoleSpecificCharts()}\r\n\r\n        {/* Recent Activities */}\r\n        <Grid size={{ xs: 12, lg: 6 }}>\r\n          <RecentActivity activities={userActivities} />\r\n        </Grid>\r\n\r\n        {/* Quick Actions */}\r\n        <Grid size={{ xs: 12, lg: 6 }}>\r\n          <QuickActions actions={userQuickActions} />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["DASHBOARD_STATS","admin","id","title","value","change","changeType","icon","color","trainer","member","CHART_DATA","membershipGrowth","data","month","members","newMembers","revenueByMonth","labels","classAttendance","class","attendance","memberWorkouts","day","workouts","trainerSchedule","time","classes","RECENT_ACTIVITIES","type","message","avatar","QUICK_ACTIONS","label","path","formatCurrency","includes","Intl","NumberFormat","style","currency","format","formatNumber","getChangeColor","getChangeIcon","getGreeting","hour","Date","getHours","getDashboardTitle","role","userName","greeting","concat","calculatePercentageChange","current","previous","Math","round","getActivityIcon","payment","equipment","progress","schedule","workout","achievement","measurement","formatTimeAgo","timeString","getChartColors","primary","secondary","success","warning","error","info","validateStatValue","undefined","iconMap","People","FitnessCenter","AttachMoney","Build","Schedule","Timer","TrendingUp","LocalFireDepartment","CardMembership","TrendingDown","Warning","Info","_ref","stat","IconComponent","changeColor","_jsx","Card","sx","height","transition","transform","boxShadow","children","CardContent","_jsxs","Box","display","alignItems","justifyContent","Typography","gutterBottom","variant","component","fontWeight","mt","Avatar","bgcolor","width","fontSize","activities","getAvatarColor","CardHeader","pt","List","disablePadding","map","activity","index","ListItem","px","py","borderBottom","length","borderColor","ListItemAvatar","ListItemText","Chip","size","textTransform","PersonAdd","Assessment","Event","Person","actions","Grid","container","spacing","action","xs","sm","Button","fullWidth","startIcon","onClick","handleActionClick","console","log","textAlign","backgroundColor","theme","useTheme","xAxisData","item","totalMembersData","newMembersData","LineChart","series","palette","main","xAxis","scaleType","strokeWidth","BarChart","yAxis","valueFormatter","toLocaleString","chartData","colors","PieChart","highlightScope","faded","highlighted","innerRadius","additionalRadius","workoutData","min","max","classData","area","Dashboard","user","useUser","userStats","userActivities","userQuickActions","p","name","mb","lg","StatCard","renderRoleSpecificCharts","_Fragment","MembershipGrowthChart","ClassAttendanceChart","RevenueChart","TrainerScheduleChart","WorkoutChart","RecentActivity","QuickActions"],"sourceRoot":""}